<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>steam_upload_score_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for steam_upload_score_buffer" />
  <meta name="rh-index-keywords" content="steam_upload_score_buffer" />
  <meta name="search-keywords" content="steam_upload_score_buffer" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">steam_upload_score_buffer</span></h1>
  <p>Diese Funktion sendet einen Spielstand an das angegebene Leaderboard zusammen mit einem aus einem Puffer erstellten Datenpaket. Der Puffer sollte nicht mehr als 256 Bytes groß sein - alles darüber hinaus wird abgehackt - und kann beliebige Daten enthalten. Der Spielstand
    sollte eine reelle Zahl sein, und der Name der Bestenliste ist eine Zeichenkette, die Sie beim Erstellen der Bestenliste mit der Funktion <a href="steam_create_leaderboard.htm"><tt><span class="notranslate">steam_create_leaderboard</span>()</tt></a>.</p>
  <p>Wenn die Funktion fehlschlägt, gibt sie den Wert -1 zurück, während ein erfolgreicher Post eine eindeutige ID für den Upload zurückgibt und ein asynchrones <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm"><span class="notranslate">Steam-Ereignis</span></a> auslöst. Dieses Ereignis
    erstellt eine <tt>DS-Map</tt> in der eingebauten Variable <tt>async_load</tt> mit den folgenden Schlüssel/Wert-Paaren:</p>
  <ul class="colour">
    <li>&quot; event_type<b>&quot; -</b> Dieser Schlüssel enthält den Wert &quot; leaderboard_upload<b>&quot;, wenn</b> er von dieser Funktion ausgelöst wird</li>
    <li>&quot; lb_name<b>&quot; -</b> Dieser Schlüssel enthält den Namen der Rangliste, die auf</li>
    <li>&quot;<b>success&quot; -</b> Wird 1 sein, wenn der Beitrag erfolgreich war, 0, wenn er fehlgeschlagen ist</li>
    <li>&quot;<b>updated&quot; -</b> Wird 1 sein, wenn der Punktestand der Bestenliste tatsächlich aktualisiert wurde (d. h.: der neue Punktestand war besser), oder andernfalls 0. Beachten Sie, dass die hochgeladenen Pufferdaten auch nicht hinzugefügt werden, wenn der Punktestand aktualisiert wurde.</li>
    <li>&quot;post_id<b>&quot; -</b> Dieser Schlüssel sollte mit dem vom Upload-Aufruf zurückgegebenen ID-Wert übereinstimmen</li>
    <li>&quot; score<b>&quot; -</b> Diese Taste enthält den Punktestand, der gebucht wurde</li>
  </ul>
  <p>Beachten Sie, dass beim Herunterladen der Rangliste der Schlüssel &quot;entries&quot; der <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a> Karte nun einen &quot;data&quot;-Schlüssel hat, damit Sie den
    hochgeladenen Datenpuffer abrufen können (weitere Details finden Sie im Codebeispiel für das erweiterte <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm"><span class="notranslate">Steam-Event</span></a> ). Dieser Datenpuffer wird <b>Base 64-kodiert</b> sein und daher müssen Sie die
    die Funktion <a href="../../Buffers/buffer_base64_decode.htm"><tt>buffer_base64_decode()</tt></a> auf die Daten anwenden, bevor Sie aus dem Puffer lesen.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span class="notranslate">steam_upload_score_buffer</span>(lb_name, score, buffer);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>lb_name</td>
        <td>Der Name der Bestenliste, in die Sie die Ergebnisse hochladen (eine Zeichenfolge).</td>
      </tr>
      <tr>
        <td>Ergebnis</td>
        <td>Die hochzuladende Punktzahl (eine echte Zahl).</td>
      </tr>
      <tr>
        <td>Puffer</td>
        <td>Die ID des Puffers, der angehängt werden soll.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Erweitertes Beispiel:</h4>
  <p>In diesem Beispiel laden wir zuerst einen Spielstand hoch und analysieren dann die <tt>async_load-Map</tt>, die bei Erfolg zurückgegeben wird. Der folgende Code zeigt ein typisches Beispiel für das Hochladen, wobei ein Puffer erstellt wird, der eine Zeichenkette enthält, die uns mitteilt, welche Stufe der Spielstand hochgeladen wurde
    von:</p>
  <p class="code">if (hp &lt;= 0)<br> {
    <br> var buff = buffer_create(256, buffer_fixed, 1 );<br> buffer_write(buff, buffer_string, &quot;Hochgeladen auf Level &quot; + string(global.Level));<br> upload_ID = steam_upload_score(&quot;Game Scores&quot;, score, buff);<br> if
    (!upload_ID)<br> {
    <br> alarm[0] = room_speed;<br> }
    <br> buffer_delete(buff);
    <br> }
  </p>
  <p>Beachten Sie, dass wir einen Alarm eingestellt haben, wenn der Aufruf fehlschlägt. Dieser würde verwendet, um den Upload zu einem späteren Zeitpunkt erneut zu versuchen und Sie können dort zusätzlichen Code hinzufügen, um den Upload erneut zu versuchen oder den Spielstand in einer Textdatei zu speichern, falls er weiterhin fehlschlägt, usw... Beachten Sie auch, dass wir
    den Puffer sofort löschen, da er für die Funktion nicht mehr benötigt wird. Wir fügen nun Folgendes in das <b><span class="notranslate">Steam</span></b> async-Ereignis für die Instanz hinzu, die die Spielstände steuert:</p>
  <p class="code">var type = ds_map_find_value(async_load, &quot;event_type&quot;);<br> if (type == &quot;leaderboard_upload&quot;)<br> {
    <br> var lb_ID = ds_map_find_value(async_load, &quot;post_id&quot;);<br> if lb_ID == upload_ID<br> {
    <br> var lb_name = ds_map_find_value(async_load, &quot;lb_name&quot;);<br> var lb_done = ds_map_find_value(async_load, &quot;success&quot;);<br> var lb_score = ds_map_find_value(async_load, &quot;score&quot;);<br> var
    lb_updated = ds_map_find_value(async_load, &quot;updated&quot;);<br> show_debug_message(&quot;leaderboard post id:&quot; + string(lb_ID) + &quot; to lb:&quot; + string(lb_name) + &quot; with score:&quot; + string(lb_score) + &quot; updated=&quot;
    + string(lb_updated));<br> if (lb_done)<br> {
    <br> show_debug_message(&quot;- Succeeded&quot;);<br> }
    <br> sonst
    <br> {
    <br> show_debug_message(&quot;- Failed&quot;);<br> }
    <br> }
    <br> }
  </p>
  <p>Im Beispiel geben wir die Rückgabewerte einfach als Debug-Meldungen an das Compiler-Fenster aus, aber Sie können dieses Ereignis verwenden, um die Informationen auf beliebige Weise zu verarbeiten.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Steam_Leaderboards.htm">Bestenlisten</a></div>
        <div style="float:right">Weiter: <a href="steam_download_scores.htm"><span class="notranslate">steam_download_scores</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">steam</span>_upload_score_buffer
-->
  <!-- TAGS
<span class="notranslate">steam</span>_upload_score_buffer
-->
</body>
</html>