<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>steam_upload_score</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for steam_upload_score" />
  <meta name="rh-index-keywords" content="steam_upload_score" />
  <meta name="search-keywords" content="steam_upload_score" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">steam_upload_score</span></h1>
  <p>Diese Funktion sendet einen Punktestand an das angegebene Leaderboard. Der hochzuladende Punktestand ist eine reelle Zahl, und der Name der Bestenliste ist eine Zeichenkette, die beim Erstellen der Bestenliste mit der Funktion <a href="steam_create_leaderboard.htm"><tt><span class="notranslate">steam_create_leaderboard</span>()</tt></a>.
    Wenn die Funktion fehlschlägt, gibt sie den Wert -1 zurück, während ein erfolgreicher Beitrag eine eindeutige ID für den Upload zurückgibt und ein asynchrones <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Steam.htm"><span class="notranslate">Steam-Event</span></a> auslöst. Dieses
    Ereignis erstellt eine <tt>DS-Map</tt> in der eingebauten Variablen <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><tt>async_load</tt></a> mit den folgenden Schlüssel/Wert-Paaren:</p>
  <ul class="colour">
    <li>&quot; event_type<b>&quot; -</b> Dieser Schlüssel enthält den Wert &quot; leaderboard_upload<b>&quot;, wenn</b> er von dieser Funktion ausgelöst wird</li>
    <li>&quot; lb_name<b>&quot; -</b> Dieser Schlüssel enthält den Namen der Rangliste, die auf</li>
    <li>&quot;<b>success&quot; -</b> Wird 1 sein, wenn der Beitrag erfolgreich war, 0, wenn er fehlgeschlagen ist</li>
    <li>&quot;<b>updated&quot; -</b> Wird 1, wenn der Punktestand in der Rangliste tatsächlich aktualisiert wurde (d. h.: der neue Punktestand war besser), ansonsten 0</li>
    <li>&quot;post_id<b>&quot; -</b> Dieser Schlüssel sollte mit dem vom Upload-Aufruf zurückgegebenen ID-Wert übereinstimmen</li>
    <li>&quot; score<b>&quot; -</b> Diese Taste enthält den Punktestand, der gebucht wurde</li>
  </ul>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span class="notranslate">steam_upload_score</span>(lb_name, score);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>lb_name</td>
        <td>Der Name der Bestenliste, in die Sie die Ergebnisse hochladen (eine Zeichenfolge).</td>
      </tr>
      <tr>
        <td>Ergebnis</td>
        <td>Die hochzuladende Punktzahl (eine echte Zahl).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Erweitertes Beispiel:</h4>
  <p>In diesem Beispiel laden wir zunächst einen Spielstand hoch und analysieren dann die bei Erfolg zurückgegebene <tt>async_load-Map</tt>. Der folgende Code zeigt ein typisches Beispiel für das Hochladen:</p>
  <p class="code">if (hp &lt;= 0)<br> {
    <br> upload_ID = <span class="notranslate">steam_upload_score</span>(&quot;Game Scores&quot;, score);<br> if (!upload_ID)<br> {
    <br> alarm[0] = room_speed;<br> }
    <br> }
  </p>
  <p>Beachten Sie, dass wir einen Alarm eingestellt haben, wenn der Aufruf fehlschlägt. Dies würde dazu dienen, den Upload zu einem späteren Zeitpunkt erneut zu versuchen, und Sie können dort zusätzlichen Code hinzufügen, um den Upload erneut zu versuchen oder den Spielstand in einer Textdatei zu speichern, falls er weiterhin fehlschlägt, usw.. Wir fügen nun folgendes hinzu
    in das <b>async-Ereignis</b> von <b><span class="notranslate">Steam</span></b> für die Instanz, die die Spielstände steuert:</p>
  <p class="code">var type = ds_map_find_value(async_load, &quot;event_type&quot;);<br> if (type == &quot;leaderboard_upload&quot;)<br> {
    <br> var lb_ID = ds_map_find_value(async_load, &quot;post_id&quot;);<br> if lb_ID == upload_ID<br> {
    <br> var lb_name = ds_map_find_value(async_load, &quot;lb_name&quot;);<br> var lb_done = ds_map_find_value(async_load, &quot;success&quot;);<br> var lb_score = ds_map_find_value(async_load, &quot;score&quot;);<br> var
    lb_updated = ds_map_find_value(async_load, &quot;updated&quot;);<br> show_debug_message(&quot;leaderboard post id:&quot; + string(lb_ID) + &quot; to lb:&quot; + string(lb_name) + &quot; with score:&quot; + string(lb_score) + &quot; updated=&quot;
    + string(lb_updated));<br> if (lb_done)<br> {
    <br> show_debug_message(&quot;- Succeeded&quot;);<br> }
    <br> sonst
    <br> {
    <br> show_debug_message(&quot;- Failed&quot;);<br> }
    <br> }
    <br> }
  </p>
  <p>im Beispiel geben wir einfach die Rückgabewerte als Debug-Meldungen an das Compiler-Fenster aus, aber Sie können dieses Ereignis verwenden, um mit den Informationen auf jede beliebige Weise umzugehen.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Steam_Leaderboards.htm">Bestenlisten</a></div>
        <div style="float:right">Weiter: <a href="steam_upload_score_buffer.htm"><span class="notranslate">steam_upload_score_buffer</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">steam</span>_upload_score
-->
  <!-- TAGS
<span class="notranslate">steam</span>_upload_score
-->
</body>
</html>