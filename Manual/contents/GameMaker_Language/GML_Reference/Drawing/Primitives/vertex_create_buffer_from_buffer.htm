<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vertex_create_buffer_from_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for vertex_create_buffer_from_buffer" />
  <meta name="rh-index-keywords" content="vertex_create_buffer_from_buffer" />
  <meta name="search-keywords" content="vertex_create_buffer_from_buffer" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vertex_create_buffer_from_buffer</h1>
  <p>Wie bei der Funktion <a href="vertex_create_buffer.htm"><tt>vertex_create_buffer()</tt></a>erzeugt diese Funktion einen neuen Scheitelpunkt-Puffer, nur dass jetzt die darin gespeicherten Scheitelpunkt-Daten aus dem regulären Puffer kopiert werden, der als Quelle angegeben ist. Der Puffer
    ist ein spezieller <i>, wachsender</i> Puffer, der mit dem Vertex-Format vorformatiert ist, um Primitive für die Verwendung mit (zum Beispiel) <span class="notranslate">Shadern</span> zu erstellen. Diese Funktion erfordert, dass Sie den Zeiger auf einen zuvor erstellten regulären Puffer und ein Vertex
    Format, das auf die kopierten Daten angewendet werden soll.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">vertex_create_buffer_from_buffer(buffer, format);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>Puffer</td>
        <td>Der Puffer, aus dem der Vertex-Puffer erstellt wird.</td>
      </tr>
      <tr>
        <td>Format</td>
        <td>Das zu verwendende primitive Scheitelpunktformat.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Zeiger</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">vertex_format_begin();<br> vertex_format_add_position_3d();
    <br> vertex_format_add_colour();
    <br> vertex_format_add_textcoord();
    <br> var my_format = vertex_format_end();<br> v_buff = vertex_create_buffer_from_buffer(global.modelBuff, myFormat);</p>
  <p>Der obige Code erstellt ein neues Scheitelpunktformat und erzeugt dann einen neuen Scheitelpunktpuffer aus einem zuvor erstellten regulären Puffer, auf den das benutzerdefinierte Scheitelpunktformat angewendet wird.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Primitives_And_Vertex_Formats.htm">Primitive und Vertex-Formate</a></div>
        <div style="float:right">Weiter: <a href="vertex_create_buffer_from_buffer_ext.htm">vertex_create_buffer_from_buffer_ext</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
vertex_create_buffer_from_buffer
-->
  <!-- TAGS
vertex_create_buffer_from_buffer
-->

</body></html>