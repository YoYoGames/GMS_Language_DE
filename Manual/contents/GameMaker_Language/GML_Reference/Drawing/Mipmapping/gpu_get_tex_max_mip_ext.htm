<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_get_tex_max_mip_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_get_tex_max_mip_ext" />
  <meta name="rh-index-keywords" content="gpu_get_tex_max_mip_ext" />
  <meta name="search-keywords" content="gpu_get_tex_max_mip_ext" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_get_tex_max_mip_ext</h1>
  <p>Mit dieser Funktion können Sie den aktuell eingestellten maximalen Mipmap-Level ermitteln, der für einen bestimmten <span class="notranslate">Shader-Sampler</span> verwendet werden soll. Sie liefern den Index-Wert für den <span class="notranslate">Shader-Sampler</span> (wie er von der Funktion <a href="../../Asset_Management/Shaders/shader_get_sampler_index.htm"><tt><span class="notranslate">shader_get_sampler_index</span>()</tt></a>,
    und die Funktion gibt den aktuellen maximalen Mipmap-Level zurück, wobei ein Wert von 0 die höchste Auflösung ist, 1 bedeutet, dass die erste Mipmap verwendet werden soll, 2 die zweite usw.. Beachten Sie, dass dies sehr nützlich sein kann, um Bleeding-Artefakte beim Rendern von Texturen zu vermeiden,
    Wenn Sie z. B. den Seitenrand der Textur auf 8px setzen und dann die maximale Mipmap-Stufe auf 3 setzen, wird sichergestellt, dass Sie bei größeren Renderabständen keine Probleme mit dem Ausbluten bekommen.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">gpu_get_tex_max_mip_ext(sampler_index);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>sampler_index</td>
        <td>Der Index des zu erhaltenden <span class="notranslate">Shader-Samplers</span> </td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Real (Voreinstellung: 16)</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var _sampleIndex = <span class="notranslate">shader_get_sampler_index</span>(shd_Glass, &quot;s_Background&quot;);<br> var _spriteTex = sprite_get_texture(sprite_index, 0);<br> shader_set <span class="notranslate">(shd_Glass</span>);
    <br> if gpu_get_tex_max_mip_ext(_sampleIndex) != 4<br> {
    <br> gpu_set_tex_max_mip_ext(_sampleIndex, 4);<br> }
    <br> texture_set_stage(_sampleIndex , _spriteTex);<br> <span class="notranslate">shader_reset</span>();
  </p>
  <p>Der obige Code setzt den maximalen Mipmap-Level für den angegebenen <span class="notranslate">Shader-Textursampler</span> auf 4, wenn er nicht bereits auf 4 gesetzt wurde.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Mipmapping.htm">Mipmapping</a></div>
        <div style="float:right">Weiter: <a href="gpu_get_tex_max_aniso.htm">gpu_get_tex_max_aniso</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
gpu_get_tex_max_mip_ext
-->
  <!-- TAGS
gpu_get_tex_max_mip_ext
-->
</body>
</html>