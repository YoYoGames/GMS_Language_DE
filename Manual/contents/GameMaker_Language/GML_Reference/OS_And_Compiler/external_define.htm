<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>extern_definieren</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for external_define" />
  <meta name="rh-index-keywords" content="external_define,dll_cdecl,dll_stdcall,ty_real,ty_string" />
  <meta name="search-keywords" content="external_define,dll_cdecl,dll_stdcall,ty_real,ty_string" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>extern_definieren</h1>
  <p>Diese Funktion kann verwendet werden, um einen externen Funktionsaufruf zu einer bestimmten dll (für <span class="notranslate">Windows</span>) oder dylib (für Mac) zu definieren. Diese Datei kann entweder eine eingeschlossene Datei oder Teil einer Erweiterung sein. Sie geben den Namen (und den Pfad) der Datei an, dann den Namen der Funktion
    die Sie definieren möchten. Als nächstes müssen Sie die zu verwendende Aufrufkonvention (siehe die Konstantenliste unten) sowie die Art des zu erwartenden Ergebnisses (ebenfalls eine Konstante, wie unten aufgeführt) definieren. Schließlich müssen Sie die Anzahl der Argumente angeben, die die
    Funktion annehmen kann (von 0 bis 15), und für jedes der Argumente müssen Sie auch dessen Typ angeben. Bitte beachten Sie, dass bei Funktionen mit 4 oder mehr Argumenten alle vom Typ <tt>ty_real</tt> sein <i>müssen</i>.</p>
  <p class="note"><b>HINWEIS</b>: Dies gilt nur für dll oder dylib, die als &quot;Enthaltene Dateien&quot; zur GameMaker <span class="notranslate">Studio 2 IDE</span> hinzugefügt wurden <span class="notranslate">.</span> Es funktioniert nicht mit Dateien, die als Erweiterungen hinzugefügt wurden, da diese erfordern, dass Sie die Funktionen im Erweiterungspaket
    Paket selbst definieren müssen.</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Konstant</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>dll_cdecl</td>
        <td>Dies ist der Standardaufruf in C, C++</td>
      </tr>
      <tr>
        <td>dll_stdcall</td>
        <td>Dies ist der Standard-WinAPI-Aufruf<span class="notranslate">(</span> nur <tt>Windows-DLL</tt> )</td>
      </tr>
      <tr>
        <td>ty_real</td>
        <td>Ein reelles Zahlenargument</td>
      </tr>
      <tr>
        <td>ty_string</td>
        <td>ein null-terminiertes String-Argument</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">external_define(dll, name, calltype, restype, argnumb, argtype[0], argtype[1], ...argtype[10]) ;</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>dll</td>
        <td>Der Name der dll-Datei (String)</td>
      </tr>
      <tr>
        <td>Name</td>
        <td>Der Name der Funktion (String)</td>
      </tr>
      <tr>
        <td>Ruftyp</td>
        <td>Die verwendete Aufrufkonvention</td>
      </tr>
      <tr>
        <td>umschreiben</td>
        <td>Der Typ des zu erwartenden Ergebnisses</td>
      </tr>
      <tr>
        <td>argnumb</td>
        <td>Die Anzahl der Argumente (0 - 10)</td>
      </tr>
      <tr>
        <td>argtype[0 ... 10]</td>
        <td>Die verschiedenen Arten von Argumenten, die verwendet werden</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Real (Eindeutiger Funktions-ID-Wert)</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">my_funcion = external_define(&quot;MyDLL.dll&quot;, &quot;MyMin&quot;, dll_cdecl, ty_real, 2, ty_real, ty_real);</p>
  <p>Im obigen Beispielcode wird eine externe Funktion namens &quot;MyMin&quot; mit zwei Argumenten definiert.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="OS_And_Compiler.htm">OS und Compiler</a></div>
        <div style="float:right">Weiter: <a href="external_call.htm">externer_Aufruf</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
external_define
dll_cdecl
dll_stdcall
ty_real
ty_string
-->
  <!-- TAGS
external_define
-->
</body>
</html>