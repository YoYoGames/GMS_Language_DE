<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>os_ist_pausiert</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for os_is_paused" />
  <meta name="rh-index-keywords" content="os_is_paused" />
  <meta name="search-keywords" content="os_is_paused" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>os_ist_pausiert</h1>
  <p>Wenn Sie für mobile Geräte entwickeln, müssen Sie eine Möglichkeit haben, um zu prüfen, ob das Gerät noch auf Ihr Spiel konzentriert ist oder nicht, zumal wenn Ihr Spiel auf einem <span class="notranslate">iOS-</span>, <span class="notranslate">Android-</span> oder <span class="notranslate">Windows Phone-Gerät</span> ist, dann kann es durch Telefonanrufe und andere Apps unterbrochen werden.
    Sie können diese Funktion verwenden, um zu prüfen, ob das Gerät pausiert ist oder nicht.</p>
  <p>Es ist erwähnenswert, dass diese Funktion jeden Code, der innerhalb des Codeblocks enthalten ist, auf Geräten ausführt, aber danach wird <span class="notranslate">GameMaker Studio 2</span> sofort pausiert, da das Gerät das Spiel als Hintergrundprozess zwischenspeichert. Wenn Sie also etwas
    wie den unten angegebenen Beispielcode haben, wird die zu erstellende Instanz <i>erst</i> dann tatsächlich erscheinen oder eines ihrer Ereignisse ausführen <i>, nachdem das Spiel aus dem Cache-Zustand neu gestartet</i> wurde. Das bedeutet, dass Sie es vielleicht vorziehen, dass die Funktion <tt>os_is_paused</tt> einen Alarm aufruft und dann im Alarm-Ereignis (das gesetzt wird, wenn das Gerät pausiert, aber nicht ausgeführt wird, bis es wieder entpausiert wird) ein Pausenmenü, einen Neustart der Musik usw. erstellt.</p>
  <p>Wenn Sie diese Funktion auf <span class="notranslate">Windows-</span>, <span class="notranslate">Ubuntu-</span><span class="notranslate">(Linux</span>), MacOS- oder HTML5-Plattformen verwenden, dann wird die Funktion nur für <b>einen Schritt</b> auf <tt>true</tt> umgeschaltet, wenn das Spiel den Fokus verliert, und gibt dann wieder <tt>false</tt> zurück, bis das Spiel wieder
    den Fokus erhält (und ihn wieder verliert). Das liegt daran, dass diese Plattformen Apps und Spiele nicht zwischenspeichern und diese daher im Hintergrund weiterlaufen.</p>
  <p class="note"><b>HINWEIS</b>: Auf mobilen Geräten werden Töne und Musik angehalten, wenn das Betriebssystem pausiert wird. Sie werden <b>nicht</b> wieder gestartet, es sei denn, Sie starten sie gezielt mit der entsprechenden Funktion.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">os_is_paused()</p>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Boolesche</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">if os_is_paused()<br> {
    <br> if !instance_exists(obj_PauseMenu)<br> {
    <br> instance_create_layer(0, 0, &quot;Controllers&quot;, obj_PauseMenu);<br> }
    <br> }
  </p>
  <p>Der obige Code prüft, ob das Spiel pausiert wurde, und wenn dies der Fall ist, wird eine Instanz des Objekts &quot;obj_PauseMenu&quot; erzeugt, falls noch keine existiert.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="OS_And_Compiler.htm">OS und Compiler</a></div>
        <div style="float:right">Weiter: <a href="os_is_network_connected.htm">os_is_network_connected</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
os_is_paused
-->
  <!-- TAGS
os_is_paused
-->
</body>
</html>