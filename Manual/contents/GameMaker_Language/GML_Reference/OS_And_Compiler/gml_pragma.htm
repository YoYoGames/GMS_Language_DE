<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gml_pragma</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for gml_pragma" />
  <meta name="rh-index-keywords" content="gml_pragma" />
  <meta name="search-keywords" content="gml_pragma" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gml_pragma</h1>
  <p>Die Funktion <tt>gml_pragma</tt> beeinflusst, wie das angegebene Ziel Ihren Code kompiliert und sollte mit den verschiedenen Befehlen aufgerufen werden, um die endgültige Kompilierung Ihres Projekts weiter zu optimieren. Diese Befehle werden effektiv <i>vorverarbeitet</i>, bevor das
    Spiel kompiliert wird. Die Funktion kann also an einer beliebigen Stelle in Ihrem Projekt platziert werden und wird dennoch verarbeitet, bevor das Spiel vollständig kompiliert wird. Die verfügbaren Befehle sind wie folgt:</p>
  <ul class="colour">
    <li>&quot;forceinline<b>&quot; -</b> Wenn die Funktion mit dem &quot;forceinline&quot;-Pragma in einer Skriptfunktion aufgerufen wird, <b>kompiliert</b> das <b>YYC</b> das Projekt mit der Funktion inline, anstatt sie zu referenzieren. Dies bringt einen weiteren Verarbeitungs
      Dies führt zu einem weiteren Verarbeitungsschub, aber es ist Vorsicht geboten, da es auch die Größe der endgültigen ausführbaren Datei aufbläht, insbesondere wenn der Inline-Code groß ist und/oder an mehreren verschiedenen Stellen verwendet wird, sowie die Kompilierzeit stark erhöht. Beachten Sie, dass dieses Pragma
     <b>nur gültig</b> ist <b>, wenn Sie mit dem YYC kompilieren</b>.</li>
    <li>&quot;<b>global&quot;, &quot;</b>[gml code]&quot; -<b> Das &quot;global</b>&quot;-Pragma erlaubt es Ihnen, einen als String formatierten GML-Code <span class="notranslate">in</span> einem globalen Bereich zur Kompilierzeit aufzurufen, bevor der erste Raum des Spiels ausgeführt wird. Zum Beispiel:<br>
     <p class="code">gml_pragma(&quot;global&quot;, &quot;Init()&quot;);</p>
      Dadurch wird die Skriptfunktion &quot;Init&quot; aufgerufen, bevor der erste Raum des Spiels ausgeführt wird. Beachten Sie, dass das als zweites Argument übergebene <span class="notranslate">GML</span> <b>eine Kompilierzeitkonstante sein muss</b>, und beachten Sie auch, dass Sie dieses Pragma nicht verwenden können, um Instanzen zu erstellen
      oder Operationen durchführen können, die einen Raum (oder irgendetwas in einem Raum) benötigen, um zu funktionieren.</li>
    <li>&quot;PNGCrush<b>&quot; -</b> Mit dem Pragma &quot;PNGCrush&quot; wird das Programm PNGCrush auf <a href="https://pmt.sourceforge.io/pngcrush/" target="_blank">jede</a> erstellte Textur angewendet. Beachten Sie, dass dies die Kompilierungszeit des Spiels erheblich verlängern kann.
      Kompilieren des Spiels erheblich verlängern kann, so dass Sie es nicht ständig aktivieren sollten, obwohl es zu erheblichen Einsparungen bei der endgültigen Dateigröße führen kann.</li>
    <li>&quot; Texgroup<b>.Scale&quot;, &quot;</b>[TextureGroupName<b>]&quot;, &quot; [Scale Divisor</b>]&quot; - Die &quot;<b>Texgroup.Scale&quot;</b> skaliert die angegebene Texturgruppe beim Kompilieren. Sie müssen hier zwei zusätzliche Argumente angeben: den &quot;[TexGroupName]&quot;,
      das ist der Name (eine Zeichenkette) der zu skalierenden Texturgruppe, und &quot;[Scale Divisor]&quot; (ebenfalls eine Zeichenkette), das ist der Divisor, den Sie für die Skalierung verwenden wollen, d. h:<br>
     <p class="code">gml_pragma(&quot;Texgroup.Scale&quot;, &quot;level1&quot;, &quot;2&quot;);</p>
      Dadurch werden alle Texturen in der Texturgruppe &quot;level1&quot; halbiert.</li>
    <li>&quot; UnityBuild<b>&quot;, &quot;</b>[enable/disable<b>]&quot; - Wenn Sie</b> die Funktion mit diesem Pragma<b> aufrufen</b> und das enable/disable-Argument auf true setzen, <tt>werden</tt> beim Kompilieren alle .cpp-Dateien im Projekt in eine einzige Datei zusammengefasst
      die dann z. B. zum Kompilieren verwendet wird:<br>
     <p class="code">gml_pragma(&quot;UnityBuild&quot;, &quot;true&quot;);</p>
      Der Vorteil eines Unity-Builds ist, dass die Builds schneller sind, aber der Nachteil ist, dass jedes Mal ein <i>kompletter</i> Build durchgeführt wird, d.h. selbst wenn Sie nur einen einzigen Teil des Codes ändern, wird alles neu gebaut, ohne dass irgendwelche zwischengespeicherten Dateien verwendet werden. Dies wurde
      wurde speziell für den Xbox One-Export unter Verwendung des YYC hinzugefügt, obwohl es auch für andere Builds aufgerufen werden kann<b>(nur YYC</b>). Weitere Informationen zu Unity-Builds finden Sie <a href="http://buffered.io/posts/the-magic-of-unity-builds/" target="_blank">hier</a>.</li>
  </ul>
  <p class="note"><b>HINWEIS</b>: Das erste Argument der Funktion <tt>gml_pragma</tt> <b>muss eine String-Konstante zur Kompilierzeit</b> und keine Variable <b>sein</b>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">gml_pragma(command, [optional...]);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>Befehl</td>
        <td>Eine Zeichenkette mit einem der unten aufgeführten Befehle.</td>
      </tr>
      <tr>
        <td>[optional]</td>
        <td>Einige der verfügbaren Befehle erfordern ein optionales Argument oder Argumente. Diese werden im Folgenden für jeden Befehl erläutert.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">gml_pragma(&quot;forceinline&quot;);</p>
  <p>Der obige Beispielcode erzwingt, dass die Skriptfunktion, in der er verwendet wird, beim Kompilieren eingeschlossen wird.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="OS_And_Compiler.htm">OS und Compiler</a></div>
        <div style="float:right">Weiter: <a href="parameter_count.htm">parameter_count</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
gml_pragma
-->
  <!-- TAGS
gml_pragma
-->
</body>
</html>