<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>shader_set_uniform_f</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function shader_set_uniform_f" />
  <meta name="rh-index-keywords" content="shader_set_uniform_f" />
  <meta name="search-keywords" content="shader_set_uniform_f" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">shader_set_uniform_f</span></h1>
  <p>Mit dieser Funktion können Sie den Wert (oder die Werte) einer <span class="notranslate">Shader-Konstante</span> setzen. Sie müssen zuvor das &quot;Handle&quot; der Konstante mit der Funktion <a href="shader_get_uniform.htm"><tt><span class="notranslate">shader_get_uniform</span>()</tt></a>erhalten haben, und
    Sie müssen wissen, um welchen Typ von Konstante es sich handelt, um die richtige Anzahl von Fließkommawerten an die Funktion zu übergeben, d.h.: wenn Sie einen <tt>vec2</tt> haben, müssen Sie zwei Werte an die Funktion übergeben.</p>
  <p>Eine Ausnahme von der obigen Regel ist der Umgang mit 32bit-Farbwerten. Sie können bis zu acht 32bit-Farbwerte in den <span class="notranslate">Shader</span> übergeben und diese werden automatisch für Sie in vec4-Werte von 0 - 1 umgewandelt. Dazu <i>müssen</i> Sie allerdings
    den <span class="notranslate">Shader-Konstantennamen</span> <tt>in_Colour</tt>, für eine einzelne Farbe, oder <tt>in_Colour0</tt>, <tt>in_Colour1</tt>, usw... bis <tt>in_Colour7</tt> für mehrere Eingabewerte. Die folgenden
    zwei Beispiele zeigen, wie dies im <span class="notranslate">Shader</span> selbst aussehen würde:</p>
  <p class="code">    //Einzelne Farbe<br> attribute vec2 in_Position;<br> attribute vec4 in_Colour;<br> attribute vec2 in_TextureCoord;<br>
    <br> //Mehrere Farben<br> attribute vec2 in_Position;<br> attribute vec4 in_Colour0;<br> attribute vec4 in_Colour1;<br> attribute vec2 in_TextureCoord;</p>
  <p>Beachten Sie auch, dass Sie, wenn Sie komprimierte Normalen etc... mit einem 4-Byte-Farbformat machen wollen, dann müssen Sie auch das gleiche &quot;in_Colour&quot;-Format wie oben gezeigt verwenden.</p>
  <p class="note"><b></b><b>HINWEIS</b>: Alle Uniformen müssen <b>nach dem</b> Aufruf der Funktion <span style="font-size:1px;"><a href="shader_set.htm"><tt style="font-size: 14px"><span class="notranslate">shader_set</span>()</tt></a></span>und vor dem Aufruf von 
    <span style="font-size:1px;"><a href="shader_reset.htm"><tt style="font-size: 14px"><span class="notranslate">shader_reset</span>()</tt></a></span>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span class="notranslate">shader_set_uniform_f</span>(handle, value1 [, value2, value3, value4]);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>Griff</td>
        <td>Das Handle der zu setzenden <span class="notranslate">Shader-Konstante</span>.</td>
      </tr>
      <tr>
        <td>Wert1 ... Wert4</td>
        <td>Der Fließkommawert (oder Werte), auf den die <span class="notranslate">Shader-Konstante</span> gesetzt werden soll.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code"><span class="notranslate">shader_set</span><span class="notranslate">(shader_Glass</span>);<br> <span class="notranslate">shader_params</span>= <span class="notranslate">shader_get_uniform</span><span class="notranslate">(shader_glass</span>, &quot;u_vParams&quot;);<br> shader_set_uniform_f(shader_params<span class="notranslate">, 0</span>.1, 0.8, 0.25);<br> draw_self();
    <br> <span class="notranslate">shader_reset</span>();
  </p>
  <p>Der obige Code holt sich das Handle der <span class="notranslate">Shader-Konstante</span> &quot;u_vParams&quot; (ein vec3) und setzt diese Konstante <tt>dann</tt> auf die angegebenen Werte.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Shaders.htm"><span class="notranslate">Shader</span></a></div>
        <div style="float:right">Weiter: <a href="shader_set_uniform_f_array.htm"><span class="notranslate">shader_set_uniform_f_array</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">shader</span>_set_uniform_f
-->
  <!-- TAGS
<span class="notranslate">shader</span>_set_uniform_f
-->
</body>
</html>