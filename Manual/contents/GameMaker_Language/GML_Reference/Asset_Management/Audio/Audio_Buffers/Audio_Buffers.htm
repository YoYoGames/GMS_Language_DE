<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Audio-Puffer</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Audio Buffers" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Audio Buffers" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Audio-Puffer</h1>
  <p>Sie können <b>Audiopuffer</b> verwenden, um Audiodateien innerhalb Ihrer Spiele zu laden, zu speichern und zu manipulieren. Diese Puffer werden zuvor mit den entsprechenden <a href="../../../Buffers/Buffers.htm">Pufferfunktionen</a> erstellt und dann können Sie die folgenden Funktionen verwenden
    verwenden, um einen Sound zur Verwendung in Ihrem Projekt zu erstellen:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="audio_create_buffer_sound.htm">audio_erzeugen_puffer_klang</a></li>
    <li><a href="audio_free_buffer_sound.htm">audio_free_buffer_sound</a></li>
  </ul>
  <p> </p>
  <p>Beachten Sie, dass Sie, sobald Sie einen Sound aus einem Audiopuffer erstellt haben, <i>keinen</i> neuen Sound im Speicher erstellen, sondern auf die Position innerhalb des Puffers verweisen, an der der Sound gespeichert ist. Sie sollten diesen Puffer nicht mehr ändern, nachdem ein Sound
    Sie sollten diesen Puffer nicht mehr ändern, nachdem ihm ein Sound zugeordnet wurde, da Sie sonst unerwartete Ergebnisse erhalten, und Sie können den Puffer nicht löschen, während ihm ein Sound zugeordnet ist. Stattdessen müssen Sie zuerst den Sound (oder die Sounds) freigeben und dann den Puffer löschen. Sobald Sie Ihre neue Audio-Ressource aus
    einem Puffer erstellt haben, können Sie seinen Indexwert in einer der regulären Audiofunktionen verwenden, um ihn abzuspielen, seine Verstärkung oder Tonhöhe zu ändern, ihn zu pausieren, usw.. Beachten Sie, dass der Puffer, der zum Laden des Audios verwendet wird, <b>nur PCM-Sounds unterstützen kann</b>, so dass Formate wie OGG nicht
    nicht unterstützt werden.</p>
  <p>Eine weitere Funktion von gepuffertem Audio ist, dass Sie einen Puffer verwenden können, um eine Audio-Warteschlange zu erstellen, die dann an das Gerät gestreamt werden kann, auf dem Ihr Projekt läuft. Eine Audio-Warteschlange nimmt einen regulären Puffer, den Sie zuvor mit Audiodaten gefüllt haben, und ermöglicht
    Sie können auf Teile davon &quot;zeigen&quot; und GameMaker <span class="notranslate">Studio 2: Studio</span> anweisen, das Audio in einer bestimmten Reihenfolge aus diesem Puffer zu streamen. Die verfügbaren Funktionen für Audio-Warteschlangen sind:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="audio_create_play_queue.htm">audio_erzeugen_wiedergabe_warteschlange</a></li>
    <li><a href="audio_free_play_queue.htm">audio_freie_wiedergabe_warteschlange</a></li>
    <li><a href="audio_queue_sound.htm">audio_queue_sound</a></li>
  </ul>
  <p> </p>
  <p>Sobald eine Warteschlange erstellt wurde, können Sie den zurückgegebenen Warteschlangen-Index genauso wie den Sound-Index für jeden normalen Sound verwenden, um ihn abzuspielen, anzuhalten, neu zu starten oder seine Verstärkung und Tonhöhe zu ändern. Das einzige, was Sie nicht tun können, ist die Spurlänge
    oder die Position der Spur einstellen, aber ansonsten kann eine Audio-Warteschlange wie jeder andere Sound verwendet werden. Sie sollten auch beachten, dass einige der Funktionen der Audio-Warteschlange auch ein <a href="../../../../../The_Asset_Editors/Object_Properties/Async_Events/Audio_Playback.htm">asynchrones Audio-Wiedergabe-Ereignis</a> auslösen werden.</p>
  <p>Mit Audiopuffern können Sie auch Ton von einer der verfügbaren Quellen (wie Mikrofonen oder dem Betriebssystem) aufzeichnen, der dann in eine Warteschlange gestellt und gestreamt werden kann (z. B. mit den oben genannten Funktionen). Die Aufnahme von Audio löst ein <a href="../../../../../The_Asset_Editors/Object_Properties/Async_Events/Audio_Recording.htm">asynchrones Audioaufnahme-Ereignis</a> aus, das spezifische Informationen darüber enthält, was aufgenommen wird.<br>
    <br> Für die Aufnahme von Audio stehen die folgenden Funktionen zur Verfügung:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="audio_start_recording.htm">audio_start_aufzeichnung</a></li>
    <li><a href="audio_stop_recording.htm">audio_stop_aufzeichnung</a></li>
    <li><a href="audio_get_recorder_count.htm">audio_get_recorder_count</a></li>
    <li><a href="audio_get_recorder_info.htm">audio_get_recorder_info</a></li>
  </ul>
  <p> </p>
  <p class="note"><b>HINWEIS: </b>Die meisten Plattformen <b>mit Ausnahme von HTML5</b> unterstützen die Aufnahme von Audio in irgendeiner Form, aber das bedeutet nicht, dass alle Geräte dies zulassen, selbst wenn die Plattform dies tut, daher sollten Sie immer prüfen, ob die <span style="font-size:1px;"><a href="audio_get_recorder_count.htm"><tt style="font-size: 14px">audio_get_recorder_count()</tt></a></span>    Funktion einen Wert größer als 0 zurückgibt, um zu prüfen, ob Aufnahmegeräte verfügbar sind, bevor Sie die restlichen Aufnahmefunktionen verwenden.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Audio.htm">Audio</a></div>
        <div style="float:right">Nächste: <a href="../Audio_Synchronisation/Audio_Synchronisation.htm">Audio-Synchronisation</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Audio Buffers
-->
  <!-- TAGS
audio_buffer_functions
-->
</body>
</html>