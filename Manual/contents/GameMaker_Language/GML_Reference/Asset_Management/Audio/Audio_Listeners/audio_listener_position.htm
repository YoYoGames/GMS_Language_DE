<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_listener_position</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_listener_position" />
  <meta name="rh-index-keywords" content="audio_listener_position" />
  <meta name="search-keywords" content="audio_listener_position" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>audio_listener_position</h1>
  <p>Mit dieser Funktion können Sie die Position des <i>Zuhörers</i> im 3D-Audio-Raum ändern. Das Beispielbild unten zeigt die Standardposition für den Hörer im Audioraum:</p>
  <p><img alt="Audio Listener Spacial Position Diagram" class="center" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Listener.png" /></p>
  <p class="note"><b>HINWEIS: </b>wenn Sie mehrere Hörer haben, sollten Sie die Funktion <tt><a href="audio_listener_set_position.htm" style="font-size: 14px">audio_listener_set_position()</a></tt>verwenden <tt>.</tt></p>
  <p>Wie Sie sehen können, ist die Standardposition (0, 0, 0), aber normalerweise würden Sie diese Funktion verwenden, um den Hörer mit dem Player-Objekt in Ihrem Spiel zu bewegen und so die Art und Weise zu ändern, wie von Emittern erzeugte Audiosignale vom Spieler gehört werden, zum Beispiel im
    Bild unten eines Top-Down-Spiels setzt die Player-Instanz den Listener, was dazu führt, dass sich das Audio von den verschiedenen Emittern &quot;ändert&quot;, wenn der Spieler sich im Level bewegt:</p>
  <p><img alt="Audio Listener Game Example" class="center" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Game.png" /></p>
  <h4>Syntax:</h4>
  <p class="code">audio_listener_position(x, y, z);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>x</td>
        <td>Die x-Position des Hörers (Voreinstellung 0).</td>
      </tr>
      <tr>
        <td>y</td>
        <td>Die y-Position des Hörers (Voreinstellung 0).</td>
      </tr>
      <tr>
        <td>z</td>
        <td>Die z-Position des Hörers (Voreinstellung 0).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">wenn Geschwindigkeit &gt; 0<br> {
    <br> audio_listener_position(x, y, 0);<br> }
  </p>
  <p>Der obige Code prüft, ob die Geschwindigkeit der Player-Instanz über 0 liegt, und wenn ja, aktualisiert er den Audio-Listener auf die aktuelle x/y-Position.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Audio_Listeners.htm">Audio-Hörer</a></div>
        <div style="float:right">Weiter: <a href="audio_listener_velocity.htm">audio_listener_velocity</a></div>
        <div style="float:right"> </div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
audio_listener_position
-->
  <!-- TAGS
audio_listener_position
-->
</body>
</html>