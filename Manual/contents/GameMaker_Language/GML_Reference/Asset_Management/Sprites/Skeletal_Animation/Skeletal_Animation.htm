<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Skelett-Animation</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different Skeletal Animation functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Skeletal Animation,gm_SpineTintBlackColour,tint black,Spine" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Skelett-Animation Sprites</h1>
  <p>Die Funktionen in diesem Abschnitt sind <i>nur</i> für die Verwendung mit Sprites gedacht, die aus einer Skelettanimationsdatei importiert wurden (genauer gesagt, die JSON-Dateien, die <a href="http://es.esotericsoftware.com/"><b>Wirbelsäule</b></a> exportiert)
    und können verwendet werden, um Informationen über ein Animations-Asset in Ihrem Spiel zu erhalten, sowie zum Einstellen bestimmter Eigenschaften innerhalb einer Animation. Diese Funktionen können zusammen mit den regulären Sprite-Funktionen und -Variablen verwendet werden, so dass Sie (zum Beispiel)
    zwei Skelett-Animationen mit diesen speziellen Funktionen mischen, während Sie die Bildskala mit den normalen Sprite-Instanzvariablen einstellen (weitere Informationen zu den Sprite-Instanzvariablen finden Sie <a href="../Sprite_Instance_Variables/Sprite_Instance_Variables.htm">hier</a>).</p>
  <p class="note"><b>HINWEIS</b>: Weitere Informationen zum Importieren von skelettartigen Animations-Sprites, die mit Spine erstellt wurden, finden Sie im Abschnitt <a href="../../../../../Settings/Texture_Information/Non-Bitmap_Sprites.htm">Importieren von Nicht-Bitmap-Sprites</a>.</p>
  <p>In den folgenden Abschnitten erfahren Sie mehr über die Funktionen für diese Arten von Sprites:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="Animation/Animation.htm"><label for="a">Animation</label></a></li>
    <li><a href="Skins/Skins.htm"><label for="b">Häute</label></a></li>
    <li><a href="Attachments/Attachments.htm"><label for="c">Anhänge</label></a></li>
    <li><a href="Bones/Bones.htm"><label for="d">Knochen</label></a></li>
    <li><a href="Slots/Slots.htm"><label for="f">Steckplätze</label></a></li>
    <li><a href="Drawing_And_Miscellaneous/Drawing_And_Miscellaneous.htm"><label for="e">Zeichnung und Sonstiges</label></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <h2>Tint Black Unterstützung</h2>
  <p>Mit dieser Funktion können die dunklen Bereiche von Spine-Sprite-Slots anders eingefärbt werden als die hellen Bereiche (dies ist eine Funktion der Spine-IDE, siehe den Abschnitt " <b>Schwarz einfärben</b> " <a href="http://esotericsoftware.com/spine-attachments" target="_blank">hier</a> für weitere Details). Um diese Funktion in <span class="notranslate">GameMaker Studio 2</span> nutzen zu können, müssen Sie derzeit ein eigenes <a href="../../../../../The_Asset_Editors/Shaders.htm"><span class="notranslate">Shader</span></a> wenn
    ein Spine-Sprite zeichnen, das es verwendet. Dieser <span class="notranslate">Shader</span> enthält eine globale einheitliche Variable namens &quot; gm_SpineTintBlackColour<tt>&quot;</tt>, die der Runner mit der aktuellen Tint-Black-Farbe füllt, die er automatisch aus den Spine-Daten abruft. Der <span class="notranslate">Shader</span>
    ist im Folgenden dargestellt:</p>
  <p>Der <span class="notranslate">Vertex-Shader</span> (dies ist derselbe wie der <span class="notranslate">Standard-Passthrough-Vertex-Shader</span>)</p>
  <p class="code">attribute vec3 in_Position; // (x,y,z)<br> attribute vec4 in_Colour; // (r,g,b,a)<br> attribute vec2 in_TextureCoord; // (u,v)<br>
    <br> varying vec2 v_vTexcoord;<br> varying vec4 v_vColour;<br>
    <br> void main()<br> {
    <br> vec4 object_space_pos = vec4( in_Position.x, in_Position.y, in_Position.z, 1.0);<br> gl_Position = gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION] * object_space_pos;<br> v_vColour = in_Colour;<br> v_vTexcoord = in_TextureCoord;<br> }
  </p>
  <p>Der <span class="notranslate">Fragment-Shader</span>:</p>
  <p class="code">varying vec2 v_vTexcoord;<br> varying vec4 v_vColour;<br>
    <br> uniform vec4 gm_SpineTintBlackColour; // Dies ist die Uniform, die die zinnschwarze Farbe enthält<br>
    <br> void main()<br> {
    <br> vec4 tb = gm_SpineTintBlackColour;<br> vec4 texcol = texture2D( gm_BaseTexture, v_vTexcoord );<br> vec4 outcol;<br> outcol.rgb = v_vColour.rgb * texcol.rgb;<br> outcol.rgb += tb.rgb * ((tb.a * (texcol.a - 1.0)) + (1.0 - texcol.rgb)); //
    Diese Zeile führt die Farbüberblendungslogik aus<br> outcol.a = v_vColour.a * texcol.a;<br> gl_FragColor = outcol;<br> }
  </p>
  <p>Sie würden dies verwenden, indem Sie zuerst den <span class="notranslate">Shader</span> aufrufen, dann das Sprite zeichnen und dann den <span class="notranslate">Shader</span> zurücksetzen, etwa so:</p>
  <p class="code"><span class="notranslate">shader_set</span>(shd_spine_tint_black);<br> draw_self();
    <br> <span class="notranslate">shader_reset</span>();
  </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Sprites.htm">Sprites</a></div>
        <div style="float:right">Nächste: <a href="../Sprite_Information/Sprite_Information.htm"><label for="three">Sprite-Informationen</label></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Spine Sprites
Spine
Skeleton Animation Sprites
gm_SpineTintBlackColour
tint black
-->
  <!-- TAGS
sprite_spìne_functions
-->
</body>
</html>