<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>tilemap_set_global_mask</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function tilemap_set_global_mask" />
  <meta name="rh-index-keywords" content="tilemap_set_global_mask,tile_rotate,tile_mirror,tile_flip,tile_index_mask" />
  <meta name="search-keywords" content="tilemap_set_global_mask,tile_rotate,tile_mirror,tile_flip,tile_index_mask" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>tilemap_set_global_mask</h1>
  <p>Diese Funktion kann verwendet werden, um die <b>Kachel-Bit-Maske</b> für alle Kachel-Maps im Spiel zu setzen. Die Idee ist, dass Sie, wenn Sie z. B. ziemlich kleine Kachelsätze von 16 x 16 Kacheln haben, insgesamt 256 verschiedene Kacheln in jedem Kachelsatz haben, was nur
    8 Bits Ihres Index im Kacheldaten-&quot;Blob&quot; verbraucht (von verfügbaren 19 Bits an Daten). Diese Bits können &quot;maskiert&quot; werden und dann kann der Rest der Kacheldaten zum Speichern weiterer Werte verwendet werden.</p>
  <p>Ein einfacher Weg, den anfänglichen Maskenindexwert zu erhalten, ist, die Anzahl der Kacheln im Kachelsatz zu nehmen und 1 abzuziehen, so dass ein 16x16-Kachelsatz 256 Kacheln und einen Maskenwert von 255 (oder $ff in Hexadezimal) hat, und wenn der Kachelsatz eine Anzahl von Kacheln hat, die <i>keine</i> Potenz von zwei ist, Wenn der Kachelsatz eine Anzahl von Kacheln hat, die keine Zweierpotenz ist, dann runden Sie auf die nächste Zweierpotenz auf, um die Maske zu erhalten, z. B. hat ein Kachelsatz von 20x20 400 Kacheln, die Sie auf 512 aufrunden würden, und erhalten so einen Maskenindexwert von 511 ($1ff in hexadezimal). Abgesehen von der Index-Maske,
    möchten Sie normalerweise auch die Werte für das Spiegeln, Drehen und Spiegeln, die einer Kachel zugewiesen sind, beibehalten, daher gibt es ein paar <b>Konstanten</b>, die verwendet werden können. Diese können mit dem Wert der Indexmaske &quot;oder&quot;-verknüpft werden, um diese Datenbits zu erhalten.
    diese Datenbits zu erhalten. Die folgenden Konstanten können verwendet werden (siehe den Beispielcode unten für die Verwendung):</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Konstant</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>kachel_rotieren</td>
        <td>Wird verwendet, um das Rotationsbit eines Kacheldatenblob zu setzen/zu holen.</td>
      </tr>
      <tr>
        <td>tile_mirror</td>
        <td>Wird verwendet, um das Spiegelbit eines Kacheldatenblob zu setzen/zu holen.</td>
      </tr>
      <tr>
        <td>kachel_flip</td>
        <td>Wird verwendet, um das Flip-Bit eines Kacheldatenblob zu setzen/zu holen.</td>
      </tr>
      <tr>
        <td>tile_index_mask</td>
        <td>Eine spezielle Konstante für die &quot;und&quot;-Verknüpfung mit dem Kacheldaten-Blob, um den Kachelindex zu extrahieren.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Die Bitmaskierung der Kachelkarte ist eine erweiterte Funktion und ermöglicht es, Bits des Kacheldaten-&quot;Blob&quot; für eigene Zwecke zu verwenden. Zum Beispiel könnte der Benutzer ein Bit reservieren, das &quot;solid&quot; in der Kacheldatenstruktur bedeutet, und dieses kann dann auf
    schnelle Kollisionen. Grundsätzlich wird die Bit-Maske mit den Kacheldaten &quot;und&quot;-verknüpft, wenn die Tile-Map gezeichnet wird (so dass <i>sie</i> keine Auswirkungen auf die anderen Funktionen hat), was bedeutet, dass Bits, die nicht in der Maske enthalten sind, ignoriert werden, aber trotzdem vom Benutzer gelesen und geschrieben werden können.
    vom Benutzer für seine eigenen Zwecke gelesen und geschrieben werden können. Beachten Sie, dass es zwei verschiedene Masken gibt - eine globale und eine pro Kachelkarte -, die von GameMaker <span class="notranslate">Studio 2</span> intern miteinander &quot;und&quot;-verknüpft werden <span class="notranslate">, bevor</span> sie zum Zeichnen verwendet werden.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">tilemap_set_global_mask(mask)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>Maske</td>
        <td>Der zu verwendende Maskenwert</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">N/A</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var mask = tile_mirror | tile_flip | tile_rotate | 255;<br> tilemap_set_global_mask(mask);
  </p>
  <p>Der obige Code setzt die Bitmaske der globalen Kachelkarte auf 8 Bit, wobei die Werte für das Kippen, Spiegeln und Drehen für jede Kachel in der Karte erhalten bleiben.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Tile_Map_Layers.htm">Kachelkartenebenen</a></div>
        <div style="float:right">Weiter: <a href="tilemap_set_width.htm"> tilemap_set_width </a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
tilemap_set_global_mask
tile_rotate
tile_mirror
tile_flip
tile_index_mask
-->
  <!-- TAGS
tilemap_set_global_mask
-->
</body>
</html>