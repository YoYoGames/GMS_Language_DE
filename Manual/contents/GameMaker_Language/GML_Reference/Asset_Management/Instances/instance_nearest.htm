<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instanz_nächste</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function instance_nearest" />
  <meta name="rh-index-keywords" content="instance_nearest" />
  <meta name="search-keywords" content="instance_nearest" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>instanz_nächste</h1>
  <p>Diese Funktion prüft alle Instanzen des angegebenen Objekts, um zu sehen, welche dem angegebenen x/y-Punkt am nächsten ist. Alle Prüfungen erfolgen von der angegebenen x/y-Position zum <i>Ursprung</i> (der x/y-Position) der Instanzen des angegebenen Objekts. Wenn keine Instanzen
    des Objekts existieren, gibt die Funktion das Schlüsselwort <a href="../../../GML_Overview/Instance_Keywords.htm"><span class="inline">noone</span></a>zurück, aber wenn es Instanzen gibt, dann gibt sie die <a href="Instance_Variables/id.htm"><tt>id</tt></a>    der gefundenen Instanz zurück. Bitte beachten Sie, dass die Instanz, die den Code ausführt, in die Prüfung einbezogen wird, wenn sie den gleichen Objektindex hat wie das zu prüfende Objekt (dies schließt die Prüfung auf übergeordnete Objekte ein, wenn die aufrufende Instanz auch ein Kind
    des Elternobjekts ist).</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">instance_nearest(x, y, obj);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>x</td>
        <td>Die x-Position, von der aus geprüft werden soll.</td>
      </tr>
      <tr>
        <td>y</td>
        <td>Die y-Position, von der aus geprüft werden soll.</td>
      </tr>
      <tr>
        <td>obj</td>
        <td>Das Objekt, das auf Instanzen von geprüft werden soll.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Real (entweder ein Instanz-ID-Wert oder das Schlüsselwort <tt>noone</tt>)</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var inst, xx;<br> xx = x;<br> x -= 10000;<br> inst = instance_nearest(xx, y, object_index);<br> if inst != id<br> {
    <br> draw_line(x, y, inst.x, inst.y);<br> }
    <br> x += 10000;</p>
  <p>Der obige Code verschiebt die aktuelle Instanz um 10000 Pixel und überprüft dann ihre vorherige Position, um die nächstgelegene Instanz desselben Objekttyps zu finden. Wenn es sich dabei um die gleiche Instanz handelt, wird nichts weiter getan, als die ursprüngliche Position wieder einzunehmen, aber wenn die
    gefundene Instanz eine andere sein, wird eine Linie zwischen den beiden gezogen.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Instances.htm">Instanzen</a></div>
        <div style="float:right">Weiter: <a href="instance_number.htm">instance_number</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
instance_nearest
-->
  <!-- TAGS
instance_nearest
-->
</body>
</html>