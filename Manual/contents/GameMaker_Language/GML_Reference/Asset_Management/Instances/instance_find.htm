<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instance_find</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function instance_find" />
  <meta name="rh-index-keywords" content="instance_find" />
  <meta name="search-keywords" content="instance_find" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>instance_find</h1>
  <p>Alle Instanzen haben eine eindeutige Kennung (<a href="Instance_Variables/id.htm"><tt>id</tt></a>), mit der sie während des Spiels verändert und manipuliert werden können. Da Sie aber nicht immer wissen, wie die id einer bestimmten Instanz lautet, kann diese Funktion
    kann Ihnen dabei helfen, da Sie mit ihr alle Instanzen durchlaufen können, um das zu finden, was Sie brauchen. Sie geben das Objekt, dessen Instanz Sie finden wollen, und eine Zahl an, und wenn es eine Instanz an dieser Position in der Instanzliste gibt, gibt die Funktion
    die id dieser Instanz zurück, und wenn nicht, gibt sie das spezielle <a href="../../../GML_Overview/Instance_Keywords.htm">Schlüsselwort</a> <span class="inline"><b>noone</b></span> zurück. Sie können auch das Schlüsselwort <span class="inline"><b>all</b></span> verwenden, um durch
    Sie können auch das Schlüsselwort <span class="inline">id</span> verwenden, um durch alle Instanzen in einem Raum zu iterieren, sowie ein übergeordnetes Objekt, um durch alle Instanzen zu iterieren, die Teil dieser Eltern-/Kind-Hierarchie sind, und Sie können sogar eine Instanz (wenn Sie deren haben) angeben, um zu prüfen, ob
    sie tatsächlich im aktuellen Raum existiert. Bitte beachten Sie, dass es, da die Instanzen <i>willkürlich</i> sortiert werden, keine bestimmte Reihenfolge gibt, wie die Instanzen von dieser Funktion geprüft werden, und jede Instanz kann sich an jeder beliebigen Position befinden.</p>
  <p>Der maximale Wert für &quot;n&quot; in dieser Funktion wäre</p>
  <ul class="colour">
    <li>Für das Schlüsselwort <span class="inline"><b>all</b></span>: <a href="instance_count.htm"><tt>instance_count - 1</tt></a></li>
    <li>Für einen Objektindex: <a href="instance_number.htm"><tt>instance_number(OBJ) - 1</tt></a></li>
  </ul>
  <p> </p>
  <h4><b>Syntax:</b></h4>
  <p class="code">instance_find(obj, n);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>obj</td>
        <td>Das Objekt zum Finden der n-ten Instanz von</td>
      </tr>
      <tr>
        <td>n</td>
        <td>Die Nummer der zu suchenden Instanz.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Real (entweder ein Instanz-ID-Wert oder das Schlüsselwort <tt>noone</tt>)</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">for (var i = 0; i &lt; instance_number(obj_Enemy); ++i;) <br> {
    <br> feind[i] = instance_find(obj_feind,i);<br> }
  </p>
  <p>Der obige Code verwendet eine <tt>for-Schleife</tt>, um durch alle Instanzen von &quot;obj_Enemy&quot; zu iterieren und ihre ID im Array &quot;enemy[]&quot; zu speichern.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Instances.htm">Instanzen</a></div>
        <div style="float:right">Weiter: <a href="instance_furthest.htm">instance_furthest</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
instance_find
-->
  <!-- TAGS
instance_find
-->
</body>
</html>