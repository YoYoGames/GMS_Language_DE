<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Müllabfuhr</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for the Garbage Collection functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Garbage Collection" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Müllabfuhr</h1>
  <p>Der <span class="notranslate">GameMaker Studio 2</span> <strong>Garbage Collector</strong> existiert, weil Methoden auf dem Stack übergeben und nicht referenziert werden können, ebenso wie Structs und ein paar andere Dinge, die wiederum ein Speicherleck verursachen würden, wenn sie nicht irgendwie &quot;aufgeräumt&quot; würden
    aufgeräumt werden. Hier kommt der Garbage Collector ins Spiel, der im Hintergrund des Spiels läuft und alles sammelt, was de-referenziert wurde, um eine optimale Speichernutzung zu gewährleisten. Wenn wir davon sprechen, dass etwas de-referenziert wird, beziehen wir uns
    Wenn wir davon sprechen, dass etwas de-referenziert ist, beziehen wir uns im Allgemeinen auf jede Struktur oder Funktion, die nicht mit einer globalen <strong>Variablen </strong>oder einer <strong>Objektinstanzvariablen</strong> verbunden ist (nicht direkt, sondern über eine Kette von anderen Variablen) <strong>.</strong> Beachten Sie auch, dass
    Funktionen, die in Skripten in der IDE definiert sind, ebenfalls nicht gesammelt werden, da sie implizit global gemacht werden.</p>
  <p class="note"><b>HINWEIS</b>: Bitte beachten Sie, dass Dinge wie Oberflächen, Datenstrukturen, Puffer und andere dynamische Ressourcen <b>nicht</b> garbage collected werden und ihre eigenen <tt>Destroy-Funktionen</tt> haben, um den mit ihnen verbundenen Speicher aufzuräumen. Als Faustregel gilt,
    Wenn etwas, das Sie zur Laufzeit erstellen, eine <tt>Zerstörungsfunktion</tt> hat, wird es nicht vom Garbage Collecting erfasst und Sie müssen sich selbst im Code darum kümmern. Die Ausnahmen hiervon sind Sequenzen, Animationskurven und Instanzen, die ebenfalls den
    den Garbage Collector benötigen, deren <b>Destroy-Funktion aber trotzdem aufgerufen werden muss</b>.</p>
  <p>Die Garbage Collection, die <span class="notranslate">GameMaker Studio 2</span> verwendet, ist &quot;generational&quot;. Das bedeutet, dass Objekte in &quot;Generationen&quot; eingeteilt werden, um die Arbeit zu reduzieren, die bei jedem Frame erledigt werden muss. Neue Objekte werden in Generation 0 erzeugt und
    sie werden in ältere Generationen verschoben, wenn sie selbst altern. Die allgemeine Idee ist, dass Objekte, die eine Weile herumhängen, nicht ständig daraufhin überprüft werden müssen, ob sie gelöscht werden sollten, sondern weniger häufig überprüft werden können (beachten Sie, dass &quot;Objekte&quot;
    sich hier auf alles bezieht, was garbage collected werden kann, und <i>nicht</i> auf allgemeine Objektinstanzen, wie sie im Asset Browser definiert sind). Beachten Sie, dass das Prüfsystem zwar generativ ist, die eigentlichen Prüfungen aber &quot;inkrementell&quot; durchgeführt werden, so dass
    Anstatt potenziell Tausende von Objekten einer Generation in einem einzigen Frame zu bereinigen - was zu einer hohen CPU-Auslastung führt und möglicherweise das Spielgeschehen beeinträchtigt -, wird jede Generation geprüft und die Bereinigung bei Bedarf über mehrere Frames verteilt, so dass der Garbage Collector
    über mehrere Frames verteilt, so dass der Garbage Collector häufiger läuft, aber weniger Arbeit pro gesammeltem Frame leistet (Sie können die Zielzeit für den Garbage Collector pro Frame mit der Funktion <span class="inline"><a href="gc_target_frame_time.htm">gc_target_frame_time()</a></span> festlegen).</p>
  <p>Im Allgemeinen sollten Sie nie mit dem <span class="notranslate">GameMaker Studio 2</span> Garbage Collection System interagieren müssen und normalerweise sind die Ergebnisse seiner Arbeit nicht sichtbar, aber einige <span class="notranslate">GML-Befehle</span> sind verfügbar, um Informationen darüber zu erhalten, was der Collector tut und
    um sein Verhalten in begrenztem Maße zu beeinflussen.</p>
  <p class="note"><b>WICHTIG!</b> Beachten Sie, dass auf der HTML5-Zielplattform die Garbage Collection von der JavaScript-Engine gehandhabt wird und daher keine der unten aufgeführten Funktionen ihren Betrieb beeinflusst und die Funktion <tt>gc_get_stats()</tt> 0 für alle
    Felder zurück.</p>
  <p> </p>
  <ul class="colour">
    <li><a href="gc_enable.htm">gc_freigeben</a></li>
    <li><a href="gc_is_enabled.htm">gc_is_enabled</a></li>
    <li><a href="gc_collect.htm">gc_collect</a></li>
    <li><a href="gc_target_frame_time.htm">gc_target_frame_time</a></li>
    <li><a href="gc_get_target_frame_time.htm"><span>gc_get_target_frame_time</span></a></li>
    <li><a href="gc_get_stats.htm">gc_get_stats</a></li>
  </ul>
  <p> </p>
  <p>Um zu entscheiden, was und wann Garbage Collecting benötigt wird, gibt es auch einige Funktionen, mit denen <strong>schwache Referenzen</strong> auf Strukturen erstellt und überprüft werden können. Eine schwache Referenz ist eine Referenz, die das referenzierte Objekt nicht vor der Sammlung durch einen Garbage Collector schützt.
    durch einen Garbage-Collector schützt und daher verwendet werden kann, um zu überprüfen, ob eine Struktur noch &quot;lebt&quot; (referenziert wird) oder nicht, irgendwo im Spiel. Die für die schwache Referenzierung verfügbaren Funktionen sind:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="weak_ref_create.htm">weak_ref_create</a></li>
    <li><a href="weak_ref_alive.htm">weak_ref_alive</a></li>
    <li><a href="weak_ref_any_alive.htm">weak_ref_any_alive</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../GML_Reference.htm"><span class="notranslate">GML-Referenz</span></a></div>
        <div style="float:right">Nächste: <a href="../Variable_Functions/Variable_Functions.htm">Variable Funktionen</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">GML</span> Reference
-->
  <!-- TAGS
gml_reference
-->
</body>
</html>