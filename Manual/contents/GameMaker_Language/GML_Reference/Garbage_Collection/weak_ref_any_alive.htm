<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>weak_ref_any_alive</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for weak_ref_any_alive" />
  <meta name="rh-index-keywords" content="weak_ref_any_alive" />
  <meta name="search-keywords" content="weak_ref_any_alive" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>weak_ref_create</h1>
  <p>Mit dieser Funktion können Sie die <a class="glossterm" data-glossterm="schwacher Hinweis" href="#">Weak-Referenz</a> auf verschiedene Structs prüfen, um zu sehen, ob sie noch &quot;am Leben&quot; sind oder nicht. Sie übergeben ein Array von weak-Referenzen, die geprüft werden sollen (jede weak
    Referenz sollte mit der Funktion <a href="weak_ref_create.htm"><span class="inline">weak_ref_create()</span></a>), und die Funktion gibt <span class="inline">true</span> zurück, wenn <em><strong>beliebig </strong></em>der Structs noch
    noch irgendwo referenziert werden, oder <span class="inline">false</span>, wenn dies nicht der Fall ist und sie bereits gelöscht wurden. Beachten Sie, dass die Funktion <span class="inline">undefined</span> zurückgibt, wenn Sie ein Array übergeben, in dem keiner der Werte eine Weak-Referenz ist.</p>
  <p>Beachten Sie, dass die Funktion auch zwei optionale Argumente benötigt, wobei das erste Ihnen erlaubt, einen anfänglichen Index in das Array zu liefern, von dem aus geprüft werden soll, sowie ein Argument, um die Anzahl der zu prüfenden Positionen (Länge) ab diesem Index festzulegen. Nur die Array-Indizes
    innerhalb dieser Parameter werden geprüft.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">weak_ref_any_alive(weak_ref, [index], [length]);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>schwach_ref</td>
        <td>Der schwache Verweis auf die Struktur, die Sie prüfen möchten.</td>
      </tr>
      <tr>
        <td>[index]</td>
        <td>OPTIONAL! Der Index im Array, ab dem die Prüfung beginnen soll</td>
      </tr>
      <tr>
        <td>[Länge]</td>
        <td>OPTIONAL! Die Anzahl der zu prüfenden Positionen ab dem angegebenen Index</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Boolesch (oder undefiniert)</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">if weak_ref_any_alive(inventory_ref_array)<br> {<br> instance_destroy(obj_Inventory_Control);<br> }</p>
  <p>Der obige Code prüft ein Array mit schwachen Referenzen und wenn eine davon noch am Leben ist, wird eine Instanz zerstört.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Garbage_Collection.htm">Müllabfuhr</a></div>
        <div style="float:right">Weiter: <a href="gc_collect.htm">gc_collect</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
weak_ref_any_alive
-->
  <!-- TAGS
weak_ref_any_alive
-->

</body></html>