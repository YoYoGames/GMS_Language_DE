<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>netzwerk_senden_paket</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for network_send_packet" />
  <meta name="rh-index-keywords" content="network_send_packet" />
  <meta name="search-keywords" content="network_send_packet" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>netzwerk_senden_paket</h1>
  <p>Mit dieser Funktion können Sie ein Daten-&quot;Paket&quot; über das Netzwerk senden. Die Funktion nimmt die <i>Socket-ID</i> an, über die eine Verbindung hergestellt werden soll, und dann müssen Sie die <i>Puffer-ID</i> angeben, die die zu sendenden Daten enthält (für weitere Informationen zu Puffern
    siehe <a href="../Buffers/Buffers.htm">Referenz - Puffer</a>) und schließlich die Größe (in Bytes) des Datenpakets. Die mit dieser Funktion gesendeten Pakete werden so formatiert, dass das <span class="notranslate">GameMaker Studio 2-Spiel</span>, das die Daten empfängt, die Pakete korrekt &quot;aufteilen&quot; kann.
    Die Funktion gibt die Anzahl der gesendeten Bytes zurück oder eine Zahl kleiner als 0, wenn der Sendevorgang fehlgeschlagen ist. Es ist erwähnenswert, dass die endgültige Größe der gesendeten Daten, die von dieser Funktion zurückgegeben wird, auch die
   <span class="notranslate">GameMaker-Header-Informationen</span> enthalten, die zusätzlich 12 Bytes umfassen.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">network_send_packet(socket, buffer, size);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>Steckdose</td>
        <td>Die ID des zu verwendenden Sockets.</td>
      </tr>
      <tr>
        <td>Puffer</td>
        <td>Die ID des Puffers, aus dem die Daten geholt werden sollen.</td>
      </tr>
      <tr>
        <td>Größe</td>
        <td>Die Größe (in Bytes) der Daten.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">buff = buffer_load(&quot;player_save.dat&quot;);<br> network_send_packet(sock, buff, buffer_get_size(buff));</p>
  <p>Die obigen Informationen laden einen zuvor gespeicherten Puffer in den Speicher und geben die Puffer-ID zurück, die in der Variablen &quot;buff&quot; gespeichert werden soll. Dieser komplette Puffer wird dann als Paket über das Netzwerk unter Verwendung des Sockets, der durch die Variable
    &quot;sock&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Networking.htm">Networking</a></div>
        <div style="float:right">Weiter: <a href="network_send_raw.htm">network_send_raw</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
network_send_packet
-->
  <!-- TAGS
network_send_packet
-->
</body>
</html>