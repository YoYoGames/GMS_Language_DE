<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Netzwerk_verbinden</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for network_connect" />
  <meta name="rh-index-keywords" content="network_connect" />
  <meta name="search-keywords" content="network_connect" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Netzwerk_verbinden</h1>
  <p>Mit dieser Funktion können Sie eine Anfrage zur Verbindung mit einem Server senden. Die Funktion nimmt die <i>Socket-ID</i>, über die die Verbindung hergestellt werden soll (siehe <a href="network_create_socket.htm"><tt>network_create_socket()</tt></a>) und verlangt die Angabe der IP-Adresse, zu der die Verbindung aufgebaut werden soll
    (eine Zeichenkette) sowie den Port, über den die Verbindung hergestellt werden soll. Wenn die Verbindung fehlschlägt, wird ein Wert kleiner 0 zurückgegeben. Die Verbindung verwendet ein spezielles Protokoll, das sicherstellt, dass sich nur <span class="notranslate">GameMaker Studio 2-Spiele</span> miteinander verbinden.
    mit einem Server verbinden müssen, der kein GameMaker <span class="notranslate">Studio 2-Spiel</span> ist, können Sie <a href="network_connect_raw.htm"><tt>netzwerk_verbinden_raw()</tt></a>. Beachten Sie, dass die Funktion standardmäßig synchron ist, was bedeutet, dass Ihr Spiel &quot;hängen&quot; kann
    während die Verbindung hergestellt wird. Sie können einen Timeout-Wert für die Verbindung setzen oder alternativ die Erstellung asynchron machen, indem Sie die Funktion <tt><a href="network_set_config.htm">netzwerk_set_config()</a></tt>verwenden, oder alternativ die Funktion
    <span class="inline"><a href="network_connect_async.htm">netzwerk_verbinden_async()</a></span> stattdessen.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">network_connect(socket, url, port);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>Steckdose</td>
        <td>Die ID des zu verwendenden Sockets.</td>
      </tr>
      <tr>
        <td>url</td>
        <td>Die URL oder IP, zu der eine Verbindung hergestellt werden soll (eine Zeichenfolge).</td>
      </tr>
      <tr>
        <td>Hafen</td>
        <td>Der Anschluss, zu dem eine Verbindung hergestellt werden soll.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Real</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">client = network_create_socket(network_socket_tcp);<br> network_connect(client, &quot;192.134.0.1&quot;, 6510);</p>
  <p>Der obige Code erstellt einen neuen TCP-Socket und versucht dann, sich über diesen mit der angegebenen IP-Adresse an Port 6510 zu verbinden.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Networking.htm">Networking</a></div>
        <div style="float:right">Weiter: <a href="network_connect_async.htm">network_connect_async</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
network_connect
-->
  <!-- TAGS
network_connect
-->
</body>
</html>