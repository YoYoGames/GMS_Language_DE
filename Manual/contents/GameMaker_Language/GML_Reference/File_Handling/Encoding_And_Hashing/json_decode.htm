<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_decode</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for json_decode" />
  <meta name="rh-index-keywords" content="json_decode" />
  <meta name="search-keywords" content="json_decode" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>json_decode</h1>
  <h3><strong>WICHTIG!</strong> Diese Funktion wurde - obwohl sie noch gültig ist - von der Funktion <span class="inline"><a href="json_parse.htm">json_parse()</a></span> abgelöst, und wir empfehlen, diese Funktion nur noch für den Legacy-Support zu verwenden.</h3>
  <p>JSON (JavaScript Object Notation) ist ein leichtgewichtiges Format für den Datenaustausch, das sowohl für Menschen als auch für Maschinen einfach zu lesen und zu schreiben ist. Es ist auf zwei Grundstrukturen aufgebaut:</p>
  <ul class="colour">
    <li>Eine Sammlung von Name/Wert-Paaren, in GameMaker Studio 2 als <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><tt>DS-Map</tt></a> in <span class="notranslate">GameMaker Studio 2</span>, aber auch als &quot;Wörterbuch&quot; oder &quot;Objekt&quot; bekannt.</li>
    <li>Eine geordnete Liste von Werten, genannt <a href="../../Data_Structures/DS_Lists/DS_Lists.htm"><tt>DS-Liste</tt></a> in <span class="notranslate">GameMaker Studio 2</span>, kann aber auch als &quot;Array&quot; oder &quot;Sequenz&quot; bezeichnet werden.</li>
  </ul>
  <p>Mit dieser Funktion können Sie ein Stück JSON dekodieren und in eine <tt>DS-Map</tt> umwandeln, die für die Verwendung in <span class="notranslate">GameMaker Studio 2</span> bereit ist. Wenn das zu dekodierende JSON eine Hierarchie von Listen und Maps innerhalb der zentralen DS-Map erfordert, werden diese ebenfalls dekodiert und ebenfalls
    dekodiert und ebenfalls nach den folgenden Regeln erstellt (beachten Sie, dass diese Regeln nur für die Top-Level-Struktur gelten):</p>
  <ul class="colour">
    <li><strong><i>JSON ist ein einzelner Wert</i></strong> - gibt eine DS-Map mit einem einzelnen Eintrag &quot;default&quot; zurück, der den Wert</li>
    <li><strong><i>JSON ist ein Array von Objekten oder Werten</i></strong> - gibt eine DS-Map mit einem einzelnen Eintrag &quot;default&quot; zurück, der eine DS-Liste der Objekte oder Werte darstellt</li>
    <li><strong><i>JSON ist ein Objekt</i></strong> - gibt eine DS-Map zurück, in der die Objekteinträge enthalten sind</li>
  </ul>
  <p class="note"><b>HINWEIS</b>: Bei der Dekodierung von JSON-Arrays gibt es eine Map mit dem Schlüssel &quot;default&quot; NUR, wenn ein Array die Struktur der obersten Ebene ist, und NUR für dieses Array der obersten Ebene. Interne Listen werden direkt in die DS-Map dekodiert, ohne in eine DS-Map eingeschlossen zu sein.</p>
  <p class="note"><strong>HINWEIS</strong>: Wenn Sie <span class="notranslate">GameMaker-Arrays</span> in die oberste Ebene oder als Inhalt einer DS-Map oder DS-Liste geschrieben haben, werden diese als DS-Listen und <strong>nicht</strong> als Arrays decodiert.</p>
  <p>Normalerweise wüssten Sie, in welche Schlüssel das JSON dekodiert, aber wenn nicht, können Sie die <a href="../../Data_Structures/DS_Maps/ds_map_size.htm"><tt>ds_map_size()</tt></a>, <a href="../../Data_Structures/DS_Maps/ds_map_find_first.htm"><tt>ds_map_find_first()</tt></a>    und <a href="../../Data_Structures/DS_Maps/ds_map_find_next.htm"><tt>ds_map_find_next()</tt></a> Funktionen verwenden, um die Map zu parsen und die notwendigen Informationen zu erhalten.</p>
  <p class="note"><b>HINWEIS</b>: <span class="notranslate">GameMaker Studio 2</span> erstellt die notwendigen DS-Maps und -Listen aus dem JSON, und zum Aufräumen müssen Sie nur die <b>oberste</b> Map oder Liste löschen, und <span class="notranslate">GameMaker Studio 2</span> löscht automatisch alle darunter liegenden Maps und Listen aus dem Speicher.</p>
  <p class="note"><b>WICHTIG</b>: Sie können keine 64-Bit-Zahlen in Ihrem JSON haben, da diese nicht korrekt funktionieren, da sie vom JSON-Format nicht verarbeitet werden.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">json_decode(zeichenkette)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>String</td>
        <td>Die Zeichenkette im JSON-Format, die Sie zur Dekodierung an die Funktion übergeben</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">DS-Map-ID oder -1, wenn es fehlschlägt</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var resultMap = json_decode(requestResult);<br> var list = ds_map_find_value(resultMap, &quot;default&quot;);<br> var size = ds_list_size(list);<br> for (var n = 0; n &lt; ds_list_size(list); n++;) <br> {
    <br> var map = ds_list_find_value(list, n);<br> var curr = ds_map_find_first(map);<br> while (is_string(curr))<br> {
    <br> global.Name[n] = ds_map_find_value(map, &quot;name&quot;);<br> curr = ds_map_find_next(map, curr);<br> }
    <br> }
    <br> ds_map_destroy(resultMap);
  </p>
  <p>Der obige Code dekodiert einen JSON-String und parst ihn, um ein globales Array zu erzeugen.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Encoding_And_Hashing.htm">Datei-Codierung</a></div>
        <div style="float:right">Weiter: <a href="json_stringify.htm">json_stringify</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
json_decode
-->
  <!-- TAGS
json_decode
-->
</body>
</html>