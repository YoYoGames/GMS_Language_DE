<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>sha1_string_unicode</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for sha1_string_unicode" />
  <meta name="rh-index-keywords" content="sha1_string_unicode" />
  <meta name="search-keywords" content="sha1_string_unicode" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>sha1_string_unicode</h1>
  <p>In der Kryptografie ist SHA-1 eine kryptografische Hash-Funktion, die von der United States <i>National Security Agency</i> entwickelt wurde und in mehreren weit verbreiteten Anwendungen und Protokollen wie dem beliebten <b><span class="notranslate">Git</span></b> verwendet, wo sie zur Überprüfung von Dateiänderungen eingesetzt wird.
    Diese Funktion nimmt eine Unicode-Zeichenkette als Eingabe und gibt z. B. einen 160-Bit-Message-Digest im ASCII-Format zurück:</p>
  <p class="code">sha1 input string = &quot;Der schnelle braune Fuchs springt über den faulen Hund&quot;<br> sha1 output hash = &quot;2fd4e1c6 7a2d28fc ed849ee1 bb76e739 1b93eb12&quot;</p>
  <p>Auf diese Weise können Sie einen sicheren Schlüssel erzeugen, der gespeichert und verwendet werden kann, um die Integrität der Informationen zu prüfen, die z. B. an einen externen Server gesendet (oder von diesem empfangen) werden.</p>
  <p class="note"><b>HINWEIS</b>: Es gibt zwei Formate für die sha1-Kodierung, UTF-8 und Unicode. Beide sind vorgesehen, um die Kommunikation mit verschiedenen Serverkonfigurationen zu erleichtern, aber am häufigsten wird Unicode verwendet.</p>
  <p class="note"><strong>HINWEIS</strong>: SHA-1 ist nicht vollständig sicher und kann gebrochen werden. Siehe <a href="https://en.wikipedia.org/wiki/SHA-1">diese Seite</a> für weitere Informationen.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">sha1_string_unicode(zeichenkette)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>String</td>
        <td>Die zu hashende Zeichenkette.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">Zeichenfolge</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var hash, str;<br> str = base64_encode(game_data);<br> hash = sha1_string_unicode(str);<br> http_get(&quot;http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?hash=&quot; + hash); http_get(&quot;http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?data=&quot;
    + str);</p>
  <p>Der obige Code kodiert eine Zeichenkette mit base64 und erzeugt dann einen sha1-Hash. Schließlich werden sowohl der Hash als auch die kodierte Zeichenfolge an einen Server gesendet.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Encoding_And_Hashing.htm">Datei-Codierung</a></div>
        <div style="float:right">Weiter: <a href="sha1_file.htm">sha1_file</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
sha1_string_unicode
-->
  <!-- TAGS
sha1_string_unicode
-->
</body>
</html>