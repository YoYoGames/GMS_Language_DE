<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_encode</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for json_encode" />
  <meta name="rh-index-keywords" content="json_encode" />
  <meta name="search-keywords" content="json_encode" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>json_encode</h1>
  <h3><strong>WICHTIG!</strong> Diese Funktion wurde - obwohl sie noch gültig ist - von der Funktion <span class="inline"><a href="json_stringify.htm">json_stringify()</a></span> abgelöst, und wir empfehlen, diese Funktion nur noch für den Legacy-Support zu verwenden.</h3>
  <p>JSON (JavaScript Object Notation) ist ein leichtgewichtiges Format für den Datenaustausch, das sowohl für Menschen als auch für Maschinen einfach zu lesen und zu schreiben ist. Es ist auf zwei Grundstrukturen aufgebaut:</p>
  <ul class="colour">
    <li>Eine Sammlung von Name/Wert-Paaren, die in GameMaker Studio 2 als <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><tt>DS-Map</tt></a> in <span class="notranslate">GameMaker Studio 2</span>, aber auch als &quot;Wörterbuch&quot; oder &quot;Objekt&quot; in anderen Programmiersprachen bekannt.</li>
    <li>Eine geordnete Liste von Werten, genannt <a href="../../Data_Structures/DS_Lists/DS_Lists.htm"><tt>DS </tt><tt>Liste</tt></a> in <span class="notranslate">GameMaker Studio 2</span>, kann aber auch als &quot;Array&quot; oder &quot;Sequenz&quot; in anderen Programmiersprachen bezeichnet werden.</li>
  </ul>
  <p><tt>json_encode()</tt> nimmt eine DS-Map oder ein Array, das Sie zuvor erstellt haben, und kodiert es als JSON-String, den Sie dann (zum Beispiel) als Teil eines <a href="../../Asynchronous_Functions/HTTP/http_post_string.htm"><tt>http_post_string()</tt></a>    Aufrufs verwenden können, oder - damit sie extern gespeichert werden kann - in eine Datei geschrieben werden kann. Wenn Sie ein Array als Top-Level-Struktur verwenden, dann kann das Array nur gültige Werte oder andere Arrays enthalten, aber <em>keine</em> Datenstrukturen. Hierfür sollten Sie die entsprechenden
    DS-Funktionen verwenden.</p>
  <p class="note"><strong>WICHTIG!</strong> JSON ist agnostisch in Bezug auf Zahlen. In jeder Programmiersprache kann es eine Vielzahl von Zahlentypen mit unterschiedlichen Kapazitäten und Ergänzungen geben, fest oder fließend, binär oder dezimal. Das kann den Austausch zwischen verschiedenen
    Programmiersprachen schwierig machen. JSON bietet stattdessen nur die Darstellung von Zahlen, die Menschen verwenden: eine Folge von Ziffern. Alle Programmiersprachen wissen, wie man mit Ziffernfolgen sinnvoll umgeht, auch wenn sie sich über die internen Darstellungen nicht einig sind. Für
    Weitere Informationen finden Sie im <a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm">ECMA JSON-Standard</a>.</p>
  <p>Beachten Sie, dass beim Schreiben von JSON in eine Ini-Datei Vorsicht geboten ist, da die Ini-Spezifikationen bei der Verwendung von Anführungszeichen und Escape-Zeichen Probleme verursachen können. Siehe die Funktion <a href="../Ini_Files/ini_write_string.htm"><tt>ini_write_string()</tt></a> für weitere
    Informationen. Beachten Sie auch, dass, wenn Sie einen int64 in JSON kodieren, dieser als <i>int</i> geschrieben wird, wenn er im gültigen Bereich für einen int32 liegt, als <i>double</i>, wenn dies ohne Präzisionsverlust möglich ist, oder (wenn keiner dieser Fälle zutrifft) als <i>String</i> mit einem Bezeichner &quot; @i64@<tt>&quot;</tt> davor und &quot; $i64$&quot; danach<tt>.</tt> Wenn Sie dazu kommen, das JSON wieder in eine Map zu dekodieren, wird <span class="notranslate">GameMaker Studio 2</span> diese Bezeichner aufgreifen und den Wert wieder in einen int64 umwandeln. Dies bedeutet jedoch
    wenn das JSON für einen Server oder ein anderes Nicht-GameMaker-Ziel bestimmt ist, sind diese Werte nicht geeignet und sollten daher vermieden werden.</p>
  <p class="note"><b>HINWEIS</b>: Die hierarchische Funktionalität von JSON ist über spezielle DS-Map- und DS-List-Funktionen verfügbar (z. B. <span class="inline"><a href="../../Data_Structures/DS_Maps/ds_map_add_list.htm" style="font-size: 14px">ds_map_add_list()</a></span> oder
    <span class="inline"><a href="../../Data_Structures/DS_Lists/ds_list_mark_as_map.htm" style="font-size: 14px">ds_list_mark_as_map()</a></span> ), so dass Sie in der Lage sind, Sub-Listen und Maps zu kodieren.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">json_encode(map)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Beschreibung</th>
      </tr>
      <tr>
        <td>Karte</td>
        <td>eine DS-Map mit den zu kodierenden Informationen (oder ein Array)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Rückgabe:</h4>
  <p class="code">String</p>
  <p> </p>
  <h4>Beispiel:</h4>
  <p class="code">var hiscore_map, i, str;<br> hiscore_map = ds_map_create();<br> for (i = 0; i &lt; 10; i ++;)<br> {
    <br> ds_map_add(hiscore_map, name[i], score[i]);<br> }
    <br> str = json_encode(hiscore_map);<br> get[0] = http_post_string(&quot;http://www.angusgames.com/game?game_id=&quot; + string(global.game_id), str)<br> ds_map_destroy(hiscore_map);
  </p>
  <p>Der obige Code erstellt eine DS-Map und durchläuft dann die Arrays "name" und "score" und fügt jedes Schlüssel/Wert-Paar der neuen Map hinzu. Als nächstes wird diese Map mit <tt>json_encode()</tt> kodiert und als String in der Variablen &quot;str&quot; gespeichert. Dieser String wird
    wird dann mit <tt>http_post_string()</tt> an einen Webserver gesendet und die DS-Map wird zerstört, um ein Speicherleck zu vermeiden, da sie nicht mehr benötigt wird.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="Encoding_And_Hashing.htm">Datei-Codierung</a></div>
        <div style="float:right">Weiter: <a href="json_decode.htm">json_decode</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
json_encode
-->
  <!-- TAGS
json_encode
-->
</body>
</html>