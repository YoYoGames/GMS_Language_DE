<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>weiter</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the continue function" />
  <meta name="rh-index-keywords" content="continue" />
  <meta name="search-keywords" content="continue" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>weiter</h1>
  <p>Die <tt>continue-Anweisung</tt> hat die folgende grundlegende Syntax:</p>
  <p class="code">weiter;</p>
  <p>Bei Verwendung innerhalb einer Anweisung, die eine Schleife bildet (<a href="for.htm"><tt>for</tt></a>, <a href="repeat.htm"><tt>wiederholen</tt></a>, <a href="while.htm"><tt>while</tt></a> oder <a href="do___until.htm"><tt>do / until</tt></a>), beendet es sofort die aktuelle
   <a class="glossterm" data-glossterm="Iteration" href="#">Iteration</a> und springt zum Anfang der Schleife zurück, um eine neue Iteration zu beginnen und jeglichen Code, der nach <span class="inline">continue</span> innerhalb der Schleife kommt, auszulassen. Es kann auch
    kann auch innerhalb der <a href="with.htm"><tt>mit</tt></a> Anweisung verwendet werden, wo es den Code veranlasst, zur nächsten Instanz zu springen und erneut auszuführen. Beachten Sie, dass die Verwendung von <tt>continue</tt> außerhalb eines dieser Kontexte zu einem Fehler führt.</p>
  <p>Im Folgenden finden Sie ein Beispiel für die Verwendung in einer <tt>for-Schleife</tt>:</p>
  <p class="code">var _val = 0;<br> for (var i = 0; i &lt; 10; i += 1)<br> {
    <br> if (val_array[i] &lt;= 0)<br> {<br> continue;<br> } <br> _val += val_array[i];<br> }
    <br> draw_text(32, 32, &quot;Positive Werte gesamt = &quot; + string(_val));</p>
  <p>Nachfolgend finden Sie ein Beispiel für die Verwendung in einer <span class="inline">while</span> -Schleife:</p>
  <p class="code">var file = file_text_open_read(&quot;Game_Data.txt&quot;);<br> var _num = 0;<br> while (!file_text_eof(file))<br> {<br> var _s = file_text_readln(file);<br> if (_s == &quot;&quot;)<br> {<br> continue;<br> } <br> str[num++] = _s;<br> } <br> file_text_close(file);
  </p>
  <p>Nachfolgend finden Sie ein Beispiel für die Verwendung in einer <span class="inline">do / until</span> -Schleife:</p>
  <p class="code">do<br> {
    <br> var _x = random(Raum_Breite);<br> var _y = random(Raum_Höhe);<br> if (instance_position(_x, y, obj_Enemy)<br> {
    <br> weiter;
    <br> }
    <br> instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br> }
    <br> until (instance_count(obj_Enemy) &gt;= 10);</p>
  <p>Nachfolgend finden Sie ein Beispiel für die Verwendung in einer <span class="inline">repeat</span> -Schleife:</p>
  <p class="code">repeat(10)<br> { <br> var _x = random(Raum_Breite);<br> var _y = random(Raum_Höhe);<br> if (instance_position(_x, y, obj_Enemy)<br> {
    <br> weiter;
    <br> }
    <br> instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br> }</p>
  <p>Zum Schluss noch ein Beispiel für die Verwendung in einer <span class="inline">with</span> -Anweisung:</p>
  <p class="code">with (obj_Enemy_Parent)<br> {<br> if (object_index == obj_Enemy_InDestructible)<br> {<br> continue;<br> } <br> hp -= 100;<br> if (hp &lt;= 0)<br> {<br> instance_destroy();<br> } <br> }</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Language_Features.htm">Spracheigenschaften</a></div>
        <div style="float:right">Weiter: <a href="exit.htm">Ausgang</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
continue
-->
  <!-- TAGS
continue
-->

</body></html>