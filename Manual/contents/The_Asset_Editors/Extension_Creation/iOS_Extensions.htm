<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>iOS-Erweiterungen</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how iOS extensions work" />
  <meta name="rh-index-keywords" content="Extensions - Creating iOS / tvOS Extensions" />
  <meta name="search-keywords" content="iOS Extensions,iOS, tvOS Extensions, tvOS" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span class="notranslate">iOS</span> / <span class="notranslate">tvOS</span> Erweiterungen</h1>
  <p>Um eine Erweiterung für <span class="notranslate">iOS</span> oder <span class="notranslate">tvOS</span> zu erstellen, müssen Sie dies in zwei Teilen tun. Der erste Teil wäre, die Erweiterung selbst hinzuzufügen, zusammen mit den erforderlichen Dateien usw... und der zweite ist, die Funktionen und Makros/Konstanten zu erstellen, die die Erweiterung benötigt.
    Die Funktionen und Konstanten werden mit Hilfe von <strong>Platzhalterdateien </strong>hinzugefügt, um sie zu gruppieren. Sie würden also einen Platzhalter hinzufügen und dann die Funktionen und Makros definieren, wie im Abschnitt hier erklärt <a href="Creating_An_Extension.htm">.</a>
    Um den Rest der Dateien hinzuzufügen, müssen Sie jedoch zuerst das Häkchen bei <em><span class="notranslate">iOS</span> </em>und/oder das <em><span class="notranslate">tvOS</span> </em>Kontrollkästchen im Abschnitt " <strong>Zusätzliche Funktionen"</strong> des Editors aktivieren, um das entsprechende Fenster " <strong>Eigenschaften der Erweiterung</strong> " zu öffnen (das
    Bild unten zeigt das <span class="notranslate">iOS-Eigenschaftenfenster</span>, aber das <span class="notranslate">tvOS-Fenster</span> ist genau dasselbe):</p>
  <p class="dropspot"><img alt="iOS Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS.png" /></p>
  <p>Hier machen Sie die folgenden Angaben:</p>
  <ul class="colour">
    <li class="dropspot"><strong>Linker-Flags / Compiler-Flags</strong>: Einige Frameworks und SDKs von Drittanbietern erfordern das Hinzufügen zusätzlicher Linker-Flags und Compiler-Flags, die hier angegeben werden können (siehe die Dokumentation des jeweiligen SDKs oder Frameworks
      für Details).</li>
    <li class="dropspot"><strong>Klassenname</strong>: Ihre Erweiterung kann mehrere Klassen haben, wobei jede Klasse ihre eigenen Funktionen und Konstanten hat, daher sollten Sie ihr einen Namen geben, der ihren Zweck widerspiegelt</li>
    <li class="dropspot"><strong>App Delegate Class Name</strong>: Der Name Ihrer benutzerdefinierten App-Delegate-Klasse. Wenn Sie dies einstellen, kann die Erweiterung die Kernfunktionalität der App außer Kraft setzen/erweitern. Um diese Funktion zu verwenden, müssen Sie Folgendes tun:
      <ol>
        <li>Stellen Sie sicher, dass die Delegaten-Quelldateien denselben Namen wie die Delegatenklasse haben (z. B. sollte <span class="inline">@interface MyCustomAppDelegate</span> in &quot; <span class="inline">MyCustomAppDelegate.h</span>&quot; definiert werden).</li>
        <li>Fügen Sie die Umgebungsvariable <span class="inline">${YYExtAppDelegateIncludes}</span> am Anfang Ihrer App-Delegate-Header-Datei hinzu. Diese wird zur Kompilierzeit durch die entsprechenden Include-Dateien für die übergeordnete Delegatenklasse ersetzt.</li>
        <li>Verwenden Sie die Umgebungsvariable <span class="inline">${YYExtAppDelegateBaseClass}</span> als Basisklasse für Ihren benutzerdefinierten App-Delegaten. Diese wird bei der Kompilierung durch die richtige Basis-Delegate-Klasse ersetzt.<br>
          <br> Um sicherzustellen, dass Ihre Erweiterung mit anderen Erweiterungen funktioniert, die benutzerdefinierte App-Delegates verwenden, sollten Sie alle Methoden der Basisklasse von überschriebenen Methoden in Ihrer Kindklasse aufrufen. Bevor Sie die Methode der Oberklasse aufrufen, müssen Sie sicherstellen, dass sie
          in der Klassenhierarchie implementiert ist, um Fehler zu vermeiden, z. B:</li>
      </ol>
     <p class="code">- (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions<br> {
        <br> // Überprüfen Sie, ob Superklassen diese Methode implementieren und rufen Sie sie auf<br> if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions:)])<br> return [super application:application willFinishLaunchingWithOptions:launchOptions];<br> else<br> return TRUE;<br> }
     </p>
    </li>
    <li class="dropspot"><strong>System-Frameworks</strong>: Hier können Sie beliebige <a class="glossterm" data-glossterm="Rahmenwerk" href="#">iOS-System-Frameworks</a>zu Ihrer Erweiterung hinzufügen. Diese werden hinzugefügt, indem Sie auf die Schaltfläche <img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18"> klicken, wodurch ein Platzhalter-Framework hinzugefügt wird, das Sie dann durch langsames Klicken auf <img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png"> bearbeiten können. Weitere Informationen zu den verfügbaren System-Frameworks finden Sie <a href="https://developer.apple.com/documentation/">hier</a>. Um ein System-Framework zu entfernen, wählen Sie es einfach aus und klicken dann auf die Schaltfläche <img alt="Remove Argument Icon" class="icon" src="../../assets/Images/Icons/Icon_RemoveArgument.png">.</li>
    <li class="dropspot"><strong>In die Info.plist injizieren</strong>: Hier können Sie beliebigen Code einfügen, der in die Datei <span class="inline">info.plist</span> injiziert werden soll.</li>
    <li class="dropspot"><strong>Frameworks und Bundles von Drittanbietern</strong>: Dieser Abschnitt dient zum Hinzufügen von Drittanbieter- und SDK-Bundles. Wie bei den System-Frameworks klicken Sie auf die Schaltfläche <img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18">, um sie hinzuzufügen, und dann langsam auf <img alt="LMB Icon" class="icon" src="../../assets/Images/Icons/Icon_LMB.png">, um sie zu bearbeiten. Wenn Sie sie auswählen und dann auf <img alt="Remove Argument Icon" class="icon" src="../../assets/Images/Icons/Icon_RemoveArgument.png"> klicken, werden sie entfernt (Informationen zum Framework-Namen finden Sie in der Dokumentation, die mit dem von Ihnen gewählten SDK geliefert wurde). Wenn sich das Framework/SDK-Bundle auf Ihrem Entwicklungs-Mac befindet, müssen Sie den Pfad in &quot; <em>Framework-Pfad auf Mac</em> eingeben <em>&quot;</em> hinzufügen
      ein und klicken Sie auf die Schaltfläche <img alt="Add Argument Icon" class="icon" height="18" src="../../assets/Images/Icons/Icon_AddArgument.png" width="18">, oder wenn sich das SDK oder der Quellcode auf Ihrem PC befindet, verwenden Sie die Schaltfläche " <em>Add Source"</em>.</li>
    <li class="dropspot"><strong><span class="notranslate">CocoaPods</span></strong>: Hier können Sie den Namen aller <span class="notranslate">CocoaPods</span> angeben, die die Erweiterung anstelle von (oder zusätzlich zu) allen hinzugefügten SDKs und Frameworks verwenden soll. Beachten Sie, dass es eine Spieloption <a href="../../Settings/Game_Options/iOS.htm">für <span class="notranslate">iOS</span></a> und <a href="../../Settings/Game_Options/tvOS.htm">für <span class="notranslate">tvOS</span></a> gibt, um eine Poddatei zu <span class="notranslate">GameMaker Studio2</span>hinzuzufügen, die erforderlich ist, wenn Sie <span class="notranslate">CocoaPods</span> in diesem Abschnitt hinzufügen.</li>
    <li class="dropspot"><strong><span class="notranslate">CocoaPods-Abhängigkeiten</span></strong>: In diesem Abschnitt können Sie die verschiedenen Abhängigkeiten auflisten, die von den im vorherigen Abschnitt hinzugefügten <span class="notranslate">CocoaPods</span> benötigt werden. Beachten Sie, dass es eine Spieloption <a href="../../Settings/Game_Options/iOS.htm">für <span class="notranslate">iOS</span></a> und <a href="../../Settings/Game_Options/tvOS.htm">für <span class="notranslate">tvOS</span></a> gibt, um eine Podfile.lock zu <span class="notranslate">GameMaker Studio2</span>hinzuzufügen, die erforderlich ist, wenn Sie in diesem Abschnitt CocoaPod-Abhängigkeiten hinzufügen.</li>
  </ul>
  <p>Wenn Ihrer Erweiterung System-Frameworks oder 3rd-Party-Frameworks hinzugefügt wurden, werden diese nun im Fenster " <strong>Eigenschaften der Erweiterung </strong>" aufgelistet, wobei jedes einzelne ein Kontrollkästchen daneben hat. Wenn Sie das Kontrollkästchen markieren, aktivieren Sie die schwache
    Linking, was nützlich ist, wenn Sie ein Symbol aus der mitgelieferten Bibliothek mit Ihrem eigenen Wert &quot;überschreiben&quot; müssen, aber es sollte beachtet werden, dass dies das Linking verlangsamt.</p>
  <p>Weitere Informationen zur Erstellung von <span class="notranslate">iOS-</span> und <span class="notranslate">tvOS-Erweiterungen</span> finden Sie in der <a href="https://help.yoyogames.com/hc/en-us/articles/360012504971-iOS-and-Android-Creating-A-Simple-Extension"><span class="notranslate">YoYo Games</span></a> Knowledge Base, und Informationen zur Verwendung von <span class="notranslate">CocoaPods</span>
    in Erweiterungen, lesen Sie bitte die folgende Anleitung:</p>
  <ul class="colour">
    <li><a href="https://help.yoyogames.com/hc/en-us/articles/360008958858"><span class="notranslate">iOS</span> und <span class="notranslate">tvOS</span>: Verwendung von Cocoa Pods</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Extensions.htm">Der Erweiterungseditor</a></div>
        <div style="float:right">Weiter: <a href="Creating_An_Extension.htm">Erstellen einer Erweiterung</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
<span class="notranslate">iOS</span> Extensions
<span class="notranslate">tvOS</span> Extensions
-->
  <!-- TAGS
extensions_ios
-->

</body></html>