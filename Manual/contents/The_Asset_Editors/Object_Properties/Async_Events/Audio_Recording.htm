<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Audio-Aufnahme</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Audio Recording async event." />
  <meta name="rh-index-keywords" content="Objects - Async Audio Recording Event" />
  <meta name="search-keywords" content="Audio Recording,ev_audio_recording" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Audio-Aufnahme</h1>
  <p><img alt="Audio Recording Event" class="center" src="../../../assets/Images/Asset_Editors/Async_AudioRecording.png">Dieses Ereignis kann nur von der <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_start_recording.htm"><span class="inline">audio_start_recording()</span></a> Funktion
    ausgelöst werden und liefert eine <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS-Map</a>, die in der Variablen <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>,
    gespeichert ist, die je nach <a class="glossterm" data-glossterm="Rückruf" href="Dialog.htm#">Callback</a> der Funktion, die das Ereignis ausgelöst hat, unterschiedliche Schlüssel/Wertpaare enthält.</p>
  <p>Die folgenden Tasten werden in der ds_map verfügbar sein:</p>
  <ul class="dropspotlist">
    <li class="dropspot">&quot;<span class="inline">buffer_id</span>&quot; - die ID des temporären Puffers, den Sie zum Abrufen der Audiodaten verwenden <a href="../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm">können</a> </li>
    <li class="dropspot">&quot;<span class="inline">channel_index</span>&quot; - der Index des Aufzeichnungskanals, wie er von der aufrufenden Funktion zurückgegeben wurde, von der diese Daten stammen</li>
    <li class="dropspot">&quot;<span class="inline">data_len</span>&quot; - die Länge der Daten (in Bytes), die Sie empfangen haben</li>
  </ul>
  <p class="note"><strong>HINWEIS</strong>: Wie am Anfang dieser Seite erwähnt, ist die Variable <span class="inline" style="font-size: 14px">async_load </span>nur in den asynchronen Ereignissen gültig, da die DS-Map, auf die sie zeigt, zu Beginn des Ereignisses erstellt wird,
    und am Ende wieder gelöscht wird. Beachten Sie jedoch, dass der temporäre Puffer, in dem alle Audiodaten mit der Map gespeichert werden, am Ende des Ereignisses ebenfalls gelöscht wird, sodass Sie ihn in einen benutzerdefinierten Puffer kopieren sollten, wenn Sie ihn für eine spätere Verwendung behalten möchten.</p>
  <p>Im folgenden Anwendungsbeispiel erstellen wir einen benutzerdefinierten Puffer, um unser aufgenommenes Audio zu speichern, und stellen unser Spiel so ein, dass es von Eingangsquelle 0 aufnimmt:</p>
  <p class="code">channel_index = audio_start_recording(0);<br> audio_buffer = buffer_create(len, buffer_fast, 1);</p>
  <p>Jeder Spielschritt, bei dem die Aufnahme erkannt wird, löst nun ein asynchrones Audio-Aufnahme-Ereignis aus, bei dem Sie mit der aufgenommenen Eingabe etwa so umgehen können:</p>
  <p class="code">var channel = async_load[? &quot;channel_index&quot;];<br> if channel == channel_index<br> {<br> len = async_load[? &quot;data_len&quot;];<br> buffer_copy(async_load[? &quot;buffer_id&quot;], 0, len, audio_buffer, 0);<br> }</p>
  <p>Hier überprüfen wir einfach den Schlüssel &quot;channel_index&quot;, um sicherzustellen, dass er mit dem Wert übereinstimmt, der beim Starten der Aufzeichnung zurückgegeben wurde, und wenn dies der Fall ist, kopieren wir den Inhalt des für dieses Ereignis erstellten temporären Puffers in unseren benutzerdefinierten Puffer. Danach können Sie
    mit dem benutzerdefinierten Puffer machen, was Sie wollen - Sie können ihn mit den speziellen Puffer-Audiofunktionen abspielen, Sie können ihn verarbeiten und über das Netzwerk senden, Sie können ihn auf der Festplatte speichern... Sobald Sie Ihr aufgenommenes Audio in einem Puffer haben, können Sie im Grunde alles tun
    alles tun, was Sie wollen.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Zurück: <a href="../Async_Events.htm">Asynchrone Ereignisse</a></div>
        <div style="float:right">Nächste: <a href="Cloud.htm">Wolke</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Alle Rechte vorbehalten</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Audio Recording Event
ev_audio_recording
-->
  <!-- TAGS
ev_audio_recording
-->

</body></html>